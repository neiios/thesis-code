{"id":"uses_null_check_1","timestamp":1745346887672,"code":"class CartItem(val id: String, val name: String, val price: Double)\n\nvar selectedItem: CartItem = null // might be missing in some cases\n","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_3","timestamp":1745346887672,"code":"def getDiscountCode(userId: String): String = {\n  if (userId == \"VIP\") \"VIP10\"\n  else null // non-idiomatic: should be Option\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_5","timestamp":1745346887672,"code":"def findCartById(cartId: String): ShoppingCart = {\n  val cart = CartDatabase.lookup(cartId)\n  if (cart != null) cart\n  else null // non-idiomatic\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_7","timestamp":1745346887672,"code":"class ShippingInfo(val address: String, val city: String)\n\nvar shipping: ShippingInfo = null // not idiomatic, should be Option\n","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_9","timestamp":1745346887672,"code":"val couponCode: String = null // coupon code not available\n","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_11","timestamp":1745346887672,"code":"def getCustomerEmail(orderId: String): String = {\n  val email = OrderSystem.lookupEmail(orderId)\n  if (email == null) {\n    println(\"No email found\")\n    null\n  } else email\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_13","timestamp":1745346887672,"code":"def applyGiftCard(balance: Double): Double = {\n  val cardNumber: String = null // gift card info missing\n  if (cardNumber != null) balance - 5 else balance\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_15","timestamp":1745346887672,"code":"val phoneNumber: java.lang.String = null // not idiomatic\nif (phoneNumber != null) println(s\"Phone: $phoneNumber\")\n","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_17","timestamp":1745346887672,"code":"def retrievePromo(code: String): Promo = {\n  val promo = JavaPromoLib.getPromo(code) // Java library call\n  if (promo != null) promo else null\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_19","timestamp":1745346887672,"code":"class PaymentInfo(val card: String, val expiry: String)\nvar paymentInfo: PaymentInfo = null\nif (paymentInfo == null) paymentInfo = new PaymentInfo(\"\", \"\")\n","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_21","timestamp":1745346887672,"code":"def getShippingMethod(orderId: String): String = {\n  val method = ShippingDb.lookup(orderId)\n  if (method != null) method else null\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_23","timestamp":1745346887672,"code":"var checkoutError: String = null\ndef processPayment(): Boolean = {\n  if (checkoutError != null) false\n  else true\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_25","timestamp":1745346887672,"code":"class Address(val street: String, val city: String)\n\ndef getAddress(customerId: String): Address = {\n  if (customerId.startsWith(\"G\")) null else new Address(\"Main St\", \"NY\")\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_27","timestamp":1745346887672,"code":"val deliveryDate: java.util.Date = null\nif (deliveryDate == null) println(\"No delivery date set\")\n","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_29","timestamp":1745346887672,"code":"def findCoupon(code: String): String = {\n  val found = codeDatabase.search(code)\n  if (found == null) null else found\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_31","timestamp":1745346887672,"code":"def fetchCartTotal(cart: ShoppingCart): Double = {\n  if (cart == null) 0.0 else cart.totalAmount\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_33","timestamp":1745346887672,"code":"var invoicePdfPath: String = null\nif (invoicePdfPath == null) invoicePdfPath = \"/tmp/invoice.pdf\"\n","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_35","timestamp":1745346887672,"code":"def updateShippingStatus(order: Order): Unit = {\n  if (order != null) order.status = \"shipped\"\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_37","timestamp":1745346887673,"code":"def lookupUser(userId: String): User = {\n  val user = UserDatabase.findById(userId)\n  if (user == null) null else user\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_39","timestamp":1745346887673,"code":"class LoyaltyPoints(val userId: String, val points: Int)\ndef getLoyalty(accountId: String): LoyaltyPoints = {\n  if (accountId.isEmpty) null else new LoyaltyPoints(accountId, 100)\n}","category":"uses_null_check","topicUsed":"E-commerce checkout"}
{"id":"uses_null_check_21","timestamp":1745346904006,"code":"var accountHolderName: String = null\nif (accountHolderName == null) {\n  println(\"No account holder name provided.\")\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_23","timestamp":1745346904006,"code":"def findTransactionById(id: String): Transaction = {\n  // Simulate no transaction found\n  null\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_25","timestamp":1745346904006,"code":"var lastLoginTime: java.time.LocalDateTime = null\nif (lastLoginTime == null) {\n  println(\"User has never logged in.\")\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_27","timestamp":1745346904006,"code":"val cardNumber: String = externalCardService.getCardNumber(userId)\nif (cardNumber != null) {\n  println(s\"User card number is $cardNumber\")\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_29","timestamp":1745346904006,"code":"def getMobileNumber(user: User): String = {\n  if (user == null || user.mobile == null) null else user.mobile\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_31","timestamp":1745346904006,"code":"var securityQuestion: String = null\nsecurityQuestion = fetchSecurityQuestion(userId)\nif (securityQuestion == null) {\n  println(\"No security question on file.\")\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_33","timestamp":1745346904006,"code":"def fetchAccountBalance(account: BankAccount): java.math.BigDecimal = {\n  if (account == null) null\n  else accountService.lookupBalance(account.number)\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_35","timestamp":1745346904007,"code":"var lastTransfer: Transaction = null\nlastTransfer = getLastTransfer(userId)\nif (lastTransfer != null) {\n  println(s\"Last transfer: ${lastTransfer.amount}\")\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_37","timestamp":1745346904007,"code":"val beneficiary: Beneficiary = beneficiaryDao.findByName(\"Alice\")\nif (beneficiary == null) println(\"No such beneficiary.\")","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_39","timestamp":1745346904007,"code":"def getPendingDeposits(accountId: String): List[Deposit] = {\n  val deposits = depositService.queryPending(accountId)\n  if (deposits == null) Nil else deposits\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_41","timestamp":1745346904007,"code":"var pushToken: String = null\nif (pushToken == null) {\n  println(\"No push notification token registered.\")\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_43","timestamp":1745346904007,"code":"def getLinkedEmail(user: User): String = {\n  // Could return null if email not set\n  emailService.fetchEmail(user.id)\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_45","timestamp":1745346904007,"code":"var session: Session = null\nsession = sessionManager.getCurrent(userId)\nif (session != null) println(\"Session active.\")","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_47","timestamp":1745346904007,"code":"def getLoanOffer(account: BankAccount): LoanOffer = {\n  val offer = loanService.findOfferForAccount(account)\n  if (offer != null) offer else null\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_49","timestamp":1745346904007,"code":"var kycStatus: String = null\nkycStatus = kycService.getKycStatus(userId)\nif (kycStatus == null) println(\"KYC not performed.\")","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_51","timestamp":1745346904007,"code":"def getStatementPdf(account: BankAccount): Array[Byte] = {\n  val pdf = statementService.generatePdf(account.number)\n  if (pdf == null) println(\"Statement PDF unavailable.\")\n  pdf\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_53","timestamp":1745346904007,"code":"val notification: Notification = notificationRepo.findNewByUser(userId)\nif (notification == null) println(\"No new notifications.\")","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_55","timestamp":1745346904007,"code":"def primaryAccount(user: User): BankAccount = {\n  val acct = accountsDao.getPrimary(user.id)\n  if (acct == null) null else acct\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_57","timestamp":1745346904007,"code":"var pinResetToken: String = null\nif (pinResetToken == null) println(\"No PIN reset requested.\")","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_59","timestamp":1745346904007,"code":"def getCreditCardLimit(card: CreditCard): java.math.BigDecimal = {\n  if (card == null) null else cardService.getLimit(card.number)\n}","category":"uses_null_check","topicUsed":"Mobile banking app"}
{"id":"uses_null_check_41","timestamp":1745346917156,"code":"class Patient(val name: String, var upcomingAppointment: Appointment)\nclass Appointment(val time: String, val doctor: String)\n\nval john = Patient(\"John Doe\", null)\n\nif (john.upcomingAppointment == null) {\n  println(\"No appointment scheduled.\")\n}","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_43","timestamp":1745346917156,"code":"def scheduleAppointment(doctor: String, time: String): Appointment = {\n  if (doctor == null || time == null) null\n  else new Appointment(time, doctor)\n}\n\n// Usage\nval appt = scheduleAppointment(null, \"10:00 AM\")\nif (appt == null) println(\"Unable to schedule appointment.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_45","timestamp":1745346917156,"code":"var bookedSlot: Appointment = null\n// ... later in code\nif (bookedSlot != null) {\n  println(s\"You have an appointment at ${bookedSlot.time}\")\n} else {\n  println(\"No appointment found.\")\n}","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_47","timestamp":1745346917156,"code":"class TelemedicineSystem {\n  def findPatientById(id: String): Patient = {\n    // Hypothetical: null means not found\n    if (id == \"123\") new Patient(\"Alice\", null) else null\n  }\n}\n\nval sys = new TelemedicineSystem\nval patient = sys.findPatientById(\"999\")\nif (patient == null) println(\"Patient not found.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_49","timestamp":1745346917156,"code":"var doctorNotes: String = null\n// Later in the logic\nif (doctorNotes == null) {\n  doctorNotes = \"No notes available.\"\n}","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_51","timestamp":1745346917156,"code":"def getNextAvailableSlot(doctor: String): String = {\n  // Returns null if no slots\n  if (doctor == \"Dr. Smith\") \"2024-07-01 09:00\" else null\n}\n\nval slot = getNextAvailableSlot(\"Dr. Jones\")\nif (slot == null) println(\"No slots.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_53","timestamp":1745346917156,"code":"class AppointmentManager {\n  var lastScheduled: Appointment = null\n\n  def logIfScheduled(): Unit = {\n    if (lastScheduled != null) println(s\"Last: ${lastScheduled.time}\")\n  }\n}","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_55","timestamp":1745346917156,"code":"def cancelAppointment(patient: Patient): Boolean = {\n  if (patient == null || patient.upcomingAppointment == null) false\n  else {\n    patient.upcomingAppointment = null\n    true\n  }\n}","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_57","timestamp":1745346917156,"code":"def fetchAppointmentDetails(apptId: String): Appointment = {\n  // Simulate missing appointment\n  null\n}\n\nval appt = fetchAppointmentDetails(\"xyz\")\nif (appt == null) println(\"No such appointment.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_59","timestamp":1745346917156,"code":"var videoLink: String = null\n\ndef sendVideoLink(link: String): Unit = {\n  if (link != null) println(s\"Video link sent: $link\")\n}\n\nsendVideoLink(videoLink)","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_61","timestamp":1745346917156,"code":"class Room(val number: String)\nvar assignedRoom: Room = null\nif (assignedRoom == null) println(\"Room not assigned.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_63","timestamp":1745346917157,"code":"def getDoctorEmail(doctor: String): String = {\n  if (doctor == null) null else s\"$doctor@clinic.com\"\n}\n\nval email = getDoctorEmail(null)\nif (email == null) println(\"Doctor email unavailable.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_65","timestamp":1745346917157,"code":"def lookupAppointment(patientName: String): Appointment = {\n  null // always returns null for demonstration\n}\n\nval nextAppt = lookupAppointment(\"Eve\")\nif (nextAppt == null) println(\"No scheduled appointment.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_67","timestamp":1745346917157,"code":"var appointmentStatus: String = null\n\nif (appointmentStatus == null) {\n  appointmentStatus = \"Pending approval\"\n}\nprintln(appointmentStatus)","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_69","timestamp":1745346917157,"code":"def findAvailableDoctor(time: String): String = {\n  if (time == null) null else \"Dr. Lee\"\n}\n\nval doctor = findAvailableDoctor(null)\nif (doctor == null) println(\"No doctor available at this time.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_71","timestamp":1745346917157,"code":"var patientEmail: String = null\n// Later in the code\nif (patientEmail != null) {\n  println(\"Sending reminder email.\")\n} else {\n  println(\"No email to send.\")\n}","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_73","timestamp":1745346917157,"code":"def getFollowUpAppt(patient: Patient): Appointment = {\n  if (patient == null) null else patient.upcomingAppointment\n}\n\nval appt2 = getFollowUpAppt(null)\nif (appt2 == null) println(\"No follow-up appointment.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_75","timestamp":1745346917157,"code":"class MedicalRecord(val summary: String)\ndef getRecord(appt: Appointment): MedicalRecord = {\n  if (appt == null) null\n  else new MedicalRecord(\"All vitals normal.\")\n}\n\nval rec = getRecord(null)\nif (rec == null) println(\"No record found.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_77","timestamp":1745346917157,"code":"var cancellationReason: String = null\n\ndef recordCancellation(reason: String): Unit = {\n  if (reason == null) println(\"No reason provided.\")\n}\n\nrecordCancellation(cancellationReason)","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_79","timestamp":1745346917157,"code":"def fetchPreferredLanguage(patient: Patient): String = {\n  if (patient == null) null else \"English\"\n}\n\nval language = fetchPreferredLanguage(null)\nif (language == null) println(\"Language unknown.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_81","timestamp":1745346917157,"code":"var notification: String = null\ntry {\n  notification = \"Appointment reminder sent.\"\n} catch {\n  case ex: Exception => notification = null\n}\nif (notification == null) println(\"Notification failed.\")","category":"uses_null_check","topicUsed":"Telemedicine appointment scheduling"}
{"id":"uses_null_check_62","timestamp":1745346928837,"code":"// 1. Explicit null assignment to activity data\nvar lastHeartRate: java.lang.Integer = null\nlastHeartRate = fetchLatestHeartRate(userId)\nif (lastHeartRate != null) println(s\"Heart rate: $lastHeartRate\") else println(\"No heart rate recorded.\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_64","timestamp":1745346928837,"code":"// 2. Null check on steps retrieved from a Java API\ndef getTodaySteps(userId: String): java.lang.Integer = {\n  // Imagine this is a Java API call that may return null\n  null\n}\nval steps = getTodaySteps(\"bob\")\nif (steps == null) println(\"No steps today!\") else println(s\"Steps: $steps\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_66","timestamp":1745346928837,"code":"// 3. Returning null when workout not found\ndef getLastWorkout(user: String): String = {\n  null // Not found, non-idiomatic: should use Option\n}\nval workout = getLastWorkout(\"alice\")\nif (workout != null) println(s\"Workout: $workout\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_68","timestamp":1745346928837,"code":"// 4. Assign null to sleep data\nvar sleepData: Array[Int] = null\nsleepData = fetchSleepDataForDate(\"2024-06-01\")\nif (sleepData == null) println(\"No sleep data\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_70","timestamp":1745346928837,"code":"// 5. Null passed as missing distance\ncase class Run(distance: java.lang.Double, duration: Int)\nval todayRun = Run(null, 1800)\nif (todayRun.distance == null) println(\"No distance measured\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_72","timestamp":1745346928837,"code":"// 6. Assign null to caloriesBurned\nvar caloriesBurned: java.lang.Integer = null\nif (caloriesBurned == null) println(\"Calories not available yet\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_74","timestamp":1745346928837,"code":"// 7. Null check for heart rate samples\ndef fetchHeartRateSamples(sessionId: String): Array[Int] = null\nval samples = fetchHeartRateSamples(\"sess42\")\nif (samples != null) println(s\"Samples: ${samples.mkString(\",\")}\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_76","timestamp":1745346928837,"code":"// 8. Non-idiomatic null check for goal progress\nvar progress: java.lang.Float = null\nprogress = calculateGoalProgress(userId, \"steps\")\nif (progress != null) println(s\"Progress: $progress%\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_78","timestamp":1745346928837,"code":"// 9. Null assignment in hydration tracking\nval lastHydrationTimestamp: java.sql.Timestamp = null\nif (lastHydrationTimestamp == null) println(\"Hydration not tracked yet.\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_80","timestamp":1745346928837,"code":"// 10. Assigning null to map of device sensor data\nvar deviceData: java.util.Map[String, java.lang.Double] = null\nif (deviceData == null) println(\"Device data missing!\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_82","timestamp":1745346928837,"code":"// 11. Null check for latest batch of GPS data\nvar gpsBatch: Array[(Double, Double)] = null\nif (gpsBatch == null) println(\"No GPS data.\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_84","timestamp":1745346928837,"code":"// 12. Fitness tracker returns null profile picture\nclass FitnessAPI {\n  def getProfileImage(userId: String): java.awt.Image = null\n}\nval img = (new FitnessAPI).getProfileImage(\"u123\")\nif (img == null) println(\"No profile image.\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_86","timestamp":1745346928837,"code":"// 13. Sleep score missing, assigned null\nvar sleepScore: java.lang.Double = null\nsleepScore = calculateSleepScore(\"bob\")\nif (sleepScore != null) println(s\"Sleep score: $sleepScore\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_88","timestamp":1745346928837,"code":"// 14. Null check on latest weight measurement\nval latestWeight: java.lang.Float = fetchWeight(\"alice\")\nif (latestWeight == null) println(\"No weight measurement.\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_90","timestamp":1745346928837,"code":"// 15. Function returning null for missing cadence\n def getCurrentCadence(user: String): java.lang.Integer = null\nval cadence = getCurrentCadence(\"alice\")\nif (cadence != null) println(s\"Cadence: $cadence\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_92","timestamp":1745346928837,"code":"// 16. Assigning null to device connection status\nvar deviceConnected: java.lang.Boolean = null\nif (deviceConnected == null) println(\"Device connection unknown.\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_94","timestamp":1745346928837,"code":"// 17. Null in user achievements tracking\nval lastAchievement: String = null\nif (lastAchievement == null) println(\"No achievements yet!\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_96","timestamp":1745346928837,"code":"// 18. Null hydration goal\n var todayHydrationGoal: java.lang.Double = null\nif (todayHydrationGoal == null) println(\"Set your hydration goal!\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_98","timestamp":1745346928837,"code":"// 19. Null check for resting heart rate value\nvar restingHR: java.lang.Integer = null\nrestingHR = getRestingHeartRate(\"bob\")\nif (restingHR != null) println(s\"Resting HR: $restingHR\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_100","timestamp":1745346928837,"code":"// 20. Null check for activity metadata from Java API\nval activityMeta: java.util.Map[String, String] = fetchActivityMetadata(\"run123\")\nif (activityMeta == null) println(\"No activity metadata present.\")\n","category":"uses_null_check","topicUsed":"Fitness tracker analytics"}
{"id":"uses_null_check_82","timestamp":1745346936621,"code":"// 1. Assigning null to a pricing plan title\nvar planTitle: String = null\n","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_84","timestamp":1745346936621,"code":"// 2. Explicit null check on plan description\nif (planDescription != null) println(s\"Plan description: $planDescription\")","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_86","timestamp":1745346936621,"code":"// 3. Returning null from a retrieval function\ndef findPricingPlanById(planId: String): PricingPlan = {\n  // ... code to find plan\n  null\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_88","timestamp":1745346936621,"code":"// 4. Null assignment to nested field\nclass PricingPlan(var name: String, var details: String)\nval plan = new PricingPlan(\"Pro\", null)","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_90","timestamp":1745346936621,"code":"// 5. Checking for null before updating a plan's feature list\nif (plan.features == null) plan.features = List()\nplan.features ::= \"Priority Support\"","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_92","timestamp":1745346936621,"code":"// 6. Null check after calling external Java service\nval javaResult: JavaPricingPlan = JavaPricingService.getPlan(planId)\nif (javaResult != null) println(\"Imported from Java API!\")","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_94","timestamp":1745346936621,"code":"// 7. Passing null explicitly to a backend function\nupdatePricingPlan(\"plan1\", null, 19.99)","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_96","timestamp":1745346936621,"code":"// 8. Null coalescing for plan image URL\nval imageUrl: String = if (rawImageUrl != null) rawImageUrl else \"/default.png\"","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_98","timestamp":1745346936621,"code":"// 9. Forcing null on old price during migration\nval oldPrice: java.lang.Double = null\nval newPrice: java.lang.Double = 24.99","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_100","timestamp":1745346936621,"code":"// 10. Pattern matching on possibly-null benefit\ndef describeBenefit(benefit: String): String = benefit match {\n  case null => \"No benefit provided\"\n  case desc => s\"Benefit: $desc\"\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_102","timestamp":1745346936621,"code":"// 11. Null assignment after removing a plan\ndef removePlan(plan: PricingPlan): Unit = {\n  plan = null\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_104","timestamp":1745346936621,"code":"// 12. Using null to denote unpublished plan timestamp\nvar publishedAt: Long = null.asInstanceOf[Long]","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_106","timestamp":1745346936621,"code":"// 13. Checking null on plan owner before access\nif (plan.owner != null) println(s\"Owner: ${plan.owner}\")","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_108","timestamp":1745346936621,"code":"// 14. Initial plan description set to null and updated later\nvar planDescription: String = null\nplanDescription = \"Unlimited projects included!\"","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_110","timestamp":1745346936621,"code":"// 15. Returning null when feature missing\ndef getPlanFeature(plan: PricingPlan, key: String): String = {\n  if (!plan.features.contains(key)) null else plan.features(key)\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_112","timestamp":1745346936622,"code":"// 16. Chained null checks in plan upgrade logic\nif (oldPlan != null && oldPlan.status != null) println(\"Plan can be upgraded\")","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_114","timestamp":1745346936622,"code":"// 17. Java list of pricing plans may be null\nval plans: java.util.List[JavaPricingPlan] = JavaPricingService.listPlans()\nif (plans == null || plans.isEmpty) println(\"No plans found\")","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_116","timestamp":1745346936622,"code":"// 18. Assign null to extendable field for coupon\nplan.couponCode = null","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_118","timestamp":1745346936622,"code":"// 19. Null assignment to next billing date for lifetime plans\nvar nextBillingDate: java.util.Date = null","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_120","timestamp":1745346936622,"code":"// 20. Returning null on failed database lookup\ndef fetchPricingPlan(id: String): PricingPlan = {\n  if (database.exists(id)) database.load(id)\n  else null\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Pricing Plans"}
{"id":"uses_null_check_102","timestamp":1745346950546,"code":"// 1. Assigning null to a possible temperature sensor value\nvar temperature: java.lang.Double = null\n","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_104","timestamp":1745346950546,"code":"// 2. Checking null for a smart bulb reference\nval bulb: SmartBulb = getSmartBulbById(\"bedroom1\")\nif (bulb != null) bulb.turnOn()","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_106","timestamp":1745346950547,"code":"// 3. Function returning null when no device is found\ndef findDevice(name: String): SmartDevice = {\n  if name.isEmpty then null else SmartDevice(name)\n}","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_108","timestamp":1745346950547,"code":"// 4. Assigning null after disconnecting from a thermostat\nvar thermostat: Thermostat = Thermostat(\"living-room\")\nthermostat.disconnect()\nthermostat = null","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_110","timestamp":1745346950547,"code":"// 5. Checking null before controlling door lock\nval doorLock: DoorLock = DoorLock.getById(\"front-door\")\nif (doorLock != null) doorLock.lock()","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_112","timestamp":1745346950547,"code":"// 6. Null check on a humidity sensor value\nval humiditySensor: HumiditySensor = getHumiditySensor()\nif (humiditySensor != null) println(humiditySensor.read())","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_114","timestamp":1745346950547,"code":"// 7. Returning null if the requested light isn't found\ndef getLight(location: String): SmartLight = {\n  if location == \"kitchen\" then SmartLight(location) else null\n}","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_116","timestamp":1745346950547,"code":"// 8. Explicit null initialization for a mode\nvar currentMode: String = null\n","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_118","timestamp":1745346950547,"code":"// 9. Passing null value to a legacy device API\nval legacyController = new LegacyDeviceAPI()\nlegacyController.setStatus(null)","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_120","timestamp":1745346950547,"code":"// 10. Checking non-null before scheduling automation\nval scene: AutomationScene = getSceneByName(\"morning\")\nif (scene != null) scene.schedule(\"07:00\")","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_122","timestamp":1745346950547,"code":"// 11. Assigning a sensor result, which may be null\nval lastMotion: MotionEvent = getLastMotionEvent()\nif (lastMotion == null) println(\"No motion detected!\")","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_124","timestamp":1745346950547,"code":"// 12. Null assignment after cleaning up camera reference\nvar camera: SecurityCamera = SecurityCamera(\"driveway\")\ncamera.stop()\ncamera = null","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_126","timestamp":1745346950547,"code":"// 13. Returning null from a function if device is offline\ndef getThermostatIfOnline(name: String): Thermostat = {\n  val t = findThermostat(name)\n  if t != null && t.isOnline() then t else null\n}","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_128","timestamp":1745346950547,"code":"// 14. Setting null to indicate missing alarm event\nvar latestAlarmEvent: AlarmEvent = null\n","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_130","timestamp":1745346950547,"code":"// 15. Using null for unavailable firmware version\ndef getFirmwareVersion(deviceId: Int): String = {\n  if deviceId < 0 then null else \"v1.2.3\"\n}","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_132","timestamp":1745346950547,"code":"// 16. Checking null for smart plug before toggling\nval plug: SmartPlug = SmartPlug.get(\"outlet1\")\nif (plug != null) plug.toggle()","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_134","timestamp":1745346950547,"code":"// 17. Passing null request to a Java-based scheduler\nval scheduler = new JavaSmartScheduler()\nscheduler.schedule(null)","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_136","timestamp":1745346950547,"code":"// 18. Returning null from getActiveUser if not logged in\ndef getActiveUser: User = {\n  if session.isAuthenticated then session.user else null\n}","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_138","timestamp":1745346950547,"code":"// 19. Setting null when sensor data times out\nvar co2Level: java.lang.Integer = 400\nif (sensorTimedOut) co2Level = null","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_140","timestamp":1745346950547,"code":"// 20. Checking if the scene retrieved by ID is null\nval eveningScene: AutomationScene = getSceneById(5)\nif (eveningScene == null) println(\"Scene not found\")","category":"uses_null_check","topicUsed":"Smart home device control"}
{"id":"uses_null_check_122","timestamp":1745346959790,"code":"class Driver(val id: String, val currentRide: Ride)\n\nclass Ride(val passenger: String)\n\ndef getCurrentRide(driver: Driver): Ride =\n  if driver.currentRide == null then\n    null\n  else\n    driver.currentRide\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_124","timestamp":1745346959790,"code":"var assignedDriver: Driver = null\nif (assignedDriver != null)\n  println(s\"Driver assigned: ${assignedDriver.id}\")\nelse\n  println(\"No driver assigned!\")\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_126","timestamp":1745346959791,"code":"def findAvailableCar(location: String): Car =\n  val car = JavaCarLocator.findNearest(location)\n  if (car == null) println(\"No cars available!\")\n  car\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_128","timestamp":1745346959791,"code":"// Might get a null from external API\nval booking: RideRequest = JavaRideApi.latestRideRequest()\nif booking != null then println(s\"Booking from: ${booking.pickup}\")","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_130","timestamp":1745346959791,"code":"def getPassengerName(ride: Ride): String =\n  if (ride == null) null\n  else ride.passengerName\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_132","timestamp":1745346959791,"code":"var nextRide: Ride = null\n// Later in code\nnextRide = new Ride(\"Dan\", \"Central Park\")\nif (nextRide == null) println(\"No next ride\")","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_134","timestamp":1745346959791,"code":"def cancelDispatch(dispatch: Dispatch): String =\n  if dispatch == null then\n    \"Nothing to cancel\"\n  else\n    dispatch.cancel()\n    \"Cancelled.\"\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_136","timestamp":1745346959791,"code":"val activeDrivers: java.util.List[Driver] = JavaDriverService.getActiveDrivers()\nif activeDrivers == null then println(\"Couldn't fetch drivers\")","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_138","timestamp":1745346959791,"code":"def getDispatcherName(dispatcher: Dispatcher): String =\n  if dispatcher != null then\n    dispatcher.name\n  else\n    null\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_140","timestamp":1745346959791,"code":"var pendingAssignment: Assignment = null\n// Assignment scheduled later\nif pendingAssignment == null then println(\"No assignments pending\")","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_142","timestamp":1745346959791,"code":"def assignRideToDriver(ride: Ride, driver: Driver): Assignment =\n  if driver == null then\n    null\n  else\n    new Assignment(driver, ride)\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_144","timestamp":1745346959791,"code":"val response: DispatchResponse = JavaDispatchApi.sendRequest(ride)\nif response == null then\n  println(\"Failed to receive a response from API\")","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_146","timestamp":1745346959791,"code":"def getEstimatedArrival(ride: Ride): Integer =\n  if (ride == null) null\n  else ride.estimatedArrival","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_148","timestamp":1745346959791,"code":"var location: String = null\nlocation = JavaGeoLocator.getCurrentStreet(driver)\nif location == null then println(\"Driver location unknown\")","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_150","timestamp":1745346959791,"code":"val request: RideRequest = fetchNextRequest()\nif request == null then println(\"No new ride requests\")","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_152","timestamp":1745346959791,"code":"def getCurrentAssignment(driver: Driver): Assignment =\n  val assignment = JavaAssignmentService.getCurrent(driver.id)\n  if assignment == null then println(\"No assignment for this driver\")\n  assignment\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_154","timestamp":1745346959791,"code":"def chooseBestRider(riders: java.util.List[Rider]): Rider =\n  if (riders == null || riders.isEmpty) null\n  else riders.get(0)\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_156","timestamp":1745346959791,"code":"var errorMessage: String = null\ndef checkAssignment(assignment: Assignment): Boolean =\n  if (assignment == null) {\n    errorMessage = \"No assignment found.\"\n    false\n  }\n  else true\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_158","timestamp":1745346959791,"code":"def promoteDriver(driver: Driver): String =\n  if (driver == null) null\n  else \"Driver promoted!\"\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_160","timestamp":1745346959791,"code":"def findScheduledRide(time: Long): Ride =\n  val ride = JavaRideScheduler.findByTime(time)\n  if ride == null then null\n  else ride\n","category":"uses_null_check","topicUsed":"Ride-sharing dispatch"}
{"id":"uses_null_check_142","timestamp":1745346987735,"code":"class Passenger(var name: String, var passportNumber: String)\n\nval passenger: Passenger = null\nif (passenger == null) println(\"No passenger information available.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_144","timestamp":1745346987735,"code":"def findFlightByNumber(flightNumber: String): Flight = {\n  // Simulates not found\n  null\n}\n\nval flight = findFlightByNumber(\"AB123\")\nif (flight == null) println(\"Flight not found.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_146","timestamp":1745346987735,"code":"class Booking(val id: String, val flight: Flight)\nval bookings: Array[Booking] = Array(null, new Booking(\"b2\", null))\nfor (booking <- bookings) {\n  if (booking != null) println(booking.id)\n}","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_148","timestamp":1745346987735,"code":"class Ticket(var ticketId: String)\nvar ticket: Ticket = null\n// Later in the code\nticket = new Ticket(\"T12345\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_150","timestamp":1745346987735,"code":"def getSeatInfo(seatNumber: String): String = {\n  // Simulates missing seat\n  null\n}\nval seatInfo = getSeatInfo(\"12A\")\nif (seatInfo == null) println(\"Seat does not exist.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_152","timestamp":1745346987735,"code":"class BoardingPass(val passId: String)\nval lastPass: BoardingPass = null\nif (lastPass != null) println(lastPass.passId) else println(\"No boarding pass.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_154","timestamp":1745346987735,"code":"def getLuggageWeight(passengerId: String): java.lang.Integer = {\n  if (passengerId == \"\") null else 20\n}\nval weight = getLuggageWeight(\"\")\nif (weight == null) println(\"No luggage info.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_156","timestamp":1745346987735,"code":"class Flight(val number: String, val departure: String)\nval flights: List[Flight] = List(null, new Flight(\"F002\", \"LAX\"))\nfor (f <- flights if f != null) {\n  println(f.number)\n}","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_158","timestamp":1745346987735,"code":"var lastCheckedIn: String = null\n// Later \nif (lastCheckedIn == null) println(\"No one has checked in yet.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_160","timestamp":1745346987736,"code":"def findCrewByRole(role: String): java.util.List[String] = {\n  // Simulated missing info\n  null\n}\nval crewList = findCrewByRole(\"pilot\")\nif (crewList == null) println(\"No crew found for the role.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_162","timestamp":1745346987736,"code":"val gateAssignment: String = null\nif (gateAssignment == null) {\n  println(\"No gate assigned.\")\n}","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_164","timestamp":1745346987736,"code":"class Price(val amount: Double)\ndef getPriceForClass(ticketClass: String): Price = {\n  // Not available for some classes\n  null\n}\nif (getPriceForClass(\"First\") == null) println(\"No price for First class\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_166","timestamp":1745346987736,"code":"var seat: String = _\nseat = null\nif (seat == null) println(\"Seat unassigned\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_168","timestamp":1745346987736,"code":"class Meal(name: String)\ndef getMealForPassenger(passengerId: String): Meal = null\nif (getMealForPassenger(\"p123\") == null) println(\"No meal for passenger.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_170","timestamp":1745346987736,"code":"def retrieveAncillaryService(code: String): java.lang.String = {\n  null\n}\nval service = retrieveAncillaryService(\"PRIORITY\")\nif (service == null) println(\"Ancillary service not available.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_172","timestamp":1745346987736,"code":"var emergencyContact: String = null\nif (emergencyContact == null) println(\"No emergency contact provided.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_174","timestamp":1745346987736,"code":"def getUpgradeOffer(passengerId: String): String = {\n  // No upgrade offer found\n  null\n}\nval offer = getUpgradeOffer(\"xyz\")\nif (offer == null) println(\"No upgrade offer available.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_176","timestamp":1745346987736,"code":"def getPreviousFlight(passenger: Passenger): Flight = null\nif (getPreviousFlight(new Passenger(\"John\", \"P1\")) == null)\n  println(\"No previous flights found.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_178","timestamp":1745346987736,"code":"val connectFlight: Flight = null\n// connecting flight assignment\nif (connectFlight eq null)\n  println(\"No connecting flight.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_180","timestamp":1745346987736,"code":"class FrequentFlyerStatus(val level: String)\ndef getFrequentFlyerStatus(passenger: Passenger): FrequentFlyerStatus = null\nval status = getFrequentFlyerStatus(new Passenger(\"Anna\", \"P2\"))\nif (status == null) println(\"Not a frequent flyer.\")","category":"uses_null_check","topicUsed":"Airline ticketing system"}
{"id":"uses_null_check_162","timestamp":1745347000982,"code":"class Guest(var name: String, var email: String)\n\nvar guest: Guest = null\nif (guest == null) {\n  println(\"No guest assigned yet.\")\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_164","timestamp":1745347000982,"code":"def findRoom(roomNumber: Int): Room = {\n  // Simulate room not found\n  null\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_166","timestamp":1745347000982,"code":"class Reservation(val guest: Guest, val room: Room)\ndef getReservation(resId: String): Reservation = {\n  null // Not found, returns null\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_168","timestamp":1745347000982,"code":"var bookingConfirmation: String = null\n// ... code that might set bookingConfirmation\nif (bookingConfirmation != null) println(s\"Confirmed: $bookingConfirmation\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_170","timestamp":1745347000982,"code":"def getHotelLocation(hotelId: Int): String = {\n  if (hotelId == 0) null else \"Some City\"\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_172","timestamp":1745347000982,"code":"// Hypothetical Java Hotel API\nobject JavaHotelAPI {\n  def findAvailableRoom(hotelId: Int): Room = null\n}\n\nval room = JavaHotelAPI.findAvailableRoom(1)\nif (room == null) println(\"No available room!\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_174","timestamp":1745347000982,"code":"val specialRequests: Array[String] = null\nif (specialRequests == null) println(\"No special requests provided.\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_176","timestamp":1745347000982,"code":"def getBookingDetails(id: Long): Booking = {\n  if (id < 0) null else new Booking(id)\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_178","timestamp":1745347000982,"code":"class Invoice(val amount: Double)\nvar invoice: Invoice = null\nif (invoice == null) println(\"Invoice is not generated yet.\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_180","timestamp":1745347000983,"code":"val hotelName: String = null\nif (hotelName == null) println(\"Hotel name is missing!\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_182","timestamp":1745347000983,"code":"def lookupGuestByEmail(email: String): Guest = {\n  if (email.contains(\"@\")) new Guest(\"John Doe\", email) else null\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_184","timestamp":1745347000983,"code":"var assignedRoom: Room = null\n// ... later\nassignedRoom = new Room(101)\nif (assignedRoom != null) println(\"Room assigned.\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_186","timestamp":1745347000983,"code":"def checkLoyaltyProgram(guestId: Int): String = {\n  if (guestId < 100) null else \"Gold\"\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_188","timestamp":1745347000983,"code":"var paymentMethod: String = null\n// ... possibly set later\nif (paymentMethod == null) println(\"No payment method selected.\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_190","timestamp":1745347000983,"code":"// Simulate getting amenities, could return null\nval amenities: List[String] = null\nif (amenities == null) println(\"No amenities data available.\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_192","timestamp":1745347000983,"code":"def getCancellationPolicy(hotelId: Int): String = {\n  if (hotelId == 42) \"Flexible\" else null\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_194","timestamp":1745347000983,"code":"// Java API returning null for missing data\nobject JavaBookingApi {\n  def getBookingStatus(id: Long): String = null\n}\n\nval status = JavaBookingApi.getBookingStatus(123)\nif (status == null) println(\"Unknown booking status.\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_196","timestamp":1745347000983,"code":"var checkInTime: java.time.LocalDateTime = null\nif (checkInTime == null) {\n  println(\"Check-in time not set.\")\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_198","timestamp":1745347000983,"code":"def findGuestById(id: Int): Guest = {\n  if (id % 2 == 0) new Guest(\"Even Guest\", s\"even$id@email.com\") else null\n}","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_200","timestamp":1745347000983,"code":"val latestReservation: Reservation = null\nif (latestReservation == null) println(\"No recent reservation.\")","category":"uses_null_check","topicUsed":"Hotel reservation engine"}
{"id":"uses_null_check_182","timestamp":1745347015307,"code":"var deliveryAddress: String = null\n// Assigning null explicitly to delivery address before it is set\n","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_184","timestamp":1745347015307,"code":"def findOrderById(id: Int): Order = {\n  // Suppose Order is a class defined elsewhere\n  if (id <= 0) return null\n  // ... fetch order logic ...\n  null // fallback return\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_186","timestamp":1745347015307,"code":"val driverName: String = null\n// Using null as placeholder for unloaded driver name","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_188","timestamp":1745347015307,"code":"def getCustomerPhone(customerId: Int): String = {\n  val dbResult = fetchPhoneFromDb(customerId) // May be null\n  if (dbResult == null) \"Unknown\" else dbResult\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_190","timestamp":1745347015307,"code":"// Simulate interacting with a Java library\nval javaTrackingCode: String = JavaApi.getTrackingCode(orderId)\nif (javaTrackingCode != null) println(s\"Tracking: $javaTrackingCode\")","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_192","timestamp":1745347015307,"code":"var restaurantContact: String = null\n// Will be set after looking up the restaurant by name\nrestaurantContact = restaurantDb.lookupContact(\"Sushi Place\")\n","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_194","timestamp":1745347015307,"code":"val currentDelivery = null // No active delivery yet\nprintln(s\"Current delivery: $currentDelivery\")","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_196","timestamp":1745347015307,"code":"def fetchCourierLocation(id: Int): Location = {\n  val l = CourierService.findLocation(id)\n  if (l == null)\n    println(\"Courier not found!\")\n  l\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_198","timestamp":1745347015308,"code":"var assignedOrder: Order = null\n// Assign an order once available\nassignedOrder = getNextPendingOrder()\n","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_200","timestamp":1745347015308,"code":"def getAvailableSlot(time: String): Slot = {\n  if (time == \"\") null else Slot(time)\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_202","timestamp":1745347015308,"code":"val tempOrder: Order = null\n// tempOrder will be instantiated after parsing user cart\n","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_204","timestamp":1745347015308,"code":"if (order.pickupTime != null) {\n  println(s\"Pickup time: ${order.pickupTime}\")\n} else {\n  println(\"No pickup time specified.\")\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_206","timestamp":1745347015308,"code":"def lookupDriverByPhone(phone: String): Driver = {\n  val d = DriverDb.findByPhone(phone)\n  if (d == null) println(\"No driver with phone found!\")\n  d\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_208","timestamp":1745347015308,"code":"var lastKnownCustomerLocation: Location = null\n// Will be updated on app location update event\n","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_210","timestamp":1745347015308,"code":"def getDeliveryFee(distance: Double): java.lang.Double = {\n  if (distance < 0) null else java.lang.Double.valueOf(distance * 0.8)\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_212","timestamp":1745347015308,"code":"val notes: String = null  // Customer did not provide notes\n","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_214","timestamp":1745347015308,"code":"def printOrderDetails(order: Order | Null): Unit = {\n  if (order != null) println(s\"Order: $order\")\n  else println(\"No order found.\")\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_216","timestamp":1745347015308,"code":"var previousRestaurant: Restaurant = null\n// set previousRestaurant when customer switches restaurants\n","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_218","timestamp":1745347015308,"code":"def getDiscountCode(orderId: Int): String = {\n  // Query external system\n  null // No discount available by default\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_220","timestamp":1745347015308,"code":"if (assignedDriver != null) {\n  println(\"Driver assigned!\")\n} else {\n  println(\"Waiting for driver assignment.\")\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_222","timestamp":1745347015308,"code":"def fetchRatingForRestaurant(rid: Int): java.lang.Integer = {\n  val rating = ExternalApi.getRestaurantRating(rid)\n  if (rating == null) java.lang.Integer.valueOf(0) else rating\n}","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_224","timestamp":1745347015308,"code":"var paymentConfirmation: String = null // Awaiting payment\n","category":"uses_null_check","topicUsed":"Food delivery logistics"}
{"id":"uses_null_check_204","timestamp":1745347033800,"code":"// 1. Explicit null assignment for a track's album cover\nvar albumCoverUrl: String = null\n\nif (albumCoverUrl == null) {\n  println(\"No album cover available.\")\n}","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_206","timestamp":1745347033800,"code":"// 2. Checking null when retrieving a user's playlist name\nval playlistName: String = getPlaylistNameFromService(userId)\nif (playlistName != null) {\n  println(s\"Playlist: $playlistName\")\n} else {\n  println(\"No playlist found for user.\")\n}\n\ndef getPlaylistNameFromService(userId: Int): String = null // Simulate possibly missing data","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_208","timestamp":1745347033800,"code":"// 3. Assigning null artist name on error\ndef fetchArtistName(trackId: Int): String = {\n  // External API call could fail\n  null\n}\n\nval artist = fetchArtistName(42)\nif (artist == null) println(\"Artist name unavailable.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_210","timestamp":1745347033800,"code":"// 4. Returning null from a search for a podcast episode\ndef searchPodcast(episodeTitle: String): PodcastEpisode = {\n  if episodeTitle.contains(\"Scala\") then new PodcastEpisode(episodeTitle)\n  else null\n}\n\nclass PodcastEpisode(val title: String)","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_212","timestamp":1745347033800,"code":"// 5. Null check before accessing streaming URL\nval streamingUrl: String = getStreamingUrl(trackId)\nif (streamingUrl != null) {\n  playStream(streamingUrl)\n}\n\ndef getStreamingUrl(id: Int): String = null // Placeholder for missing url\ndef playStream(url: String): Unit = println(s\"Playing stream at $url\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_214","timestamp":1745347033800,"code":"// 6. Assigning null for a missing recommendation\nvar recommendedTrack: String = null\n// Later...\nif (recommendedTrack == null) println(\"No recommendation found.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_216","timestamp":1745347033800,"code":"// 7. Using null to indicate missing artwork in a music library\nval artwork: Array[Byte] = fetchArtwork(trackId)\nif (artwork == null) println(\"No artwork found.\")\ndef fetchArtwork(id: Int): Array[Byte] = null","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_218","timestamp":1745347033800,"code":"// 8. Explicit null check before shuffling playlist\nval playlist: List[String] = getUserPlaylist(99)\nif (playlist != null) println(playlist.reverse)\ndef getUserPlaylist(userId: Int): List[String] = null","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_220","timestamp":1745347033800,"code":"// 9. Assigning null when an audio feature isn't available\nvar audioLoudness: java.lang.Double = null\nif (audioLoudness == null) println(\"Audio loudness data is unavailable.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_222","timestamp":1745347033801,"code":"// 10. Null check after Java API call for device info\nval javaDevice: String = JavaMusicAPI.getActiveDevice()\nif (javaDevice == null) println(\"No active device found.\")\nobject JavaMusicAPI { def getActiveDevice(): String = null }","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_224","timestamp":1745347033801,"code":"// 11. Returning null for missing lyrics\ndef getLyrics(songId: Int): String = {\n  null // Suppose lyrics not found\n}\n\nval lyrics = getLyrics(123)\nif (lyrics == null) println(\"No lyrics available.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_226","timestamp":1745347033801,"code":"// 12. Null assignment for uninitialized playback session\nvar playbackSession: Session = null\nif (playbackSession == null) println(\"Not connected to playback session.\")\nclass Session","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_228","timestamp":1745347033801,"code":"// 13. Null check for collaborative playlist owner\nval ownerName: String = fetchOwner(playlistId = 5)\nif (ownerName == null) println(\"Collaborative playlist has no owner.\")\ndef fetchOwner(playlistId: Int): String = null","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_230","timestamp":1745347033801,"code":"// 14. Returning null when song is not in favorites\ndef findInFavorites(song: String, favorites: List[String]): String =\n  if (favorites.contains(song)) song else null\n\nval result = findInFavorites(\"Scala Tune\", List())\nif (result == null) println(\"Song not in favorites.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_232","timestamp":1745347033801,"code":"// 15. Assigning null to denote missing release year\nvar releaseYear: java.lang.Integer = null\nif (releaseYear == null) println(\"Release year unknown.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_234","timestamp":1745347033801,"code":"// 16. Null check for playlist description from external service\nval description: String = ExternalMusicService.getDescription(\"party\");\nif (description == null) println(\"No description available.\")\nobject ExternalMusicService { def getDescription(x: String): String = null }","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_236","timestamp":1745347033801,"code":"// 17. Explicit null for unavailable region lock info\nval regionLock: String = null\nif (regionLock == null) println(\"Song is not region-locked or info unavailable.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_238","timestamp":1745347033801,"code":"// 18. Null check on previous track info\ndef getPreviousTrack: String = null\nif (getPreviousTrack == null) println(\"No previous track in history.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_240","timestamp":1745347033801,"code":"// 19. Null assignment for failed user lookup\nvar userProfile: User = null\nif (userProfile == null) println(\"No user profile found.\")\nclass User","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_242","timestamp":1745347033801,"code":"// 20. Returning null for non-existent genre mapping\ndef getCanonicalGenre(userGenre: String): String = {\n  null // Suppose no mapping is found\n}\n\nval canonical = getCanonicalGenre(\"underground electro jazz\")\nif (canonical == null) println(\"Genre not recognized.\")","category":"uses_null_check","topicUsed":"Digital music streaming"}
{"id":"uses_null_check_224","timestamp":1745347044756,"code":"class Tutor(val name: String, val expertise: String)\n\nvar currentTutor: Tutor = null\nif (currentTutor == null) {\n  println(\"No tutor is assigned.\")\n}","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_226","timestamp":1745347044756,"code":"def getStudentProfile(id: Int): String = {\n  // suppose fetchFromDB returns null if student not found\n  val profile = fetchFromDB(id)\n  if (profile == null) \"Student not found\" else profile\n}\n\ndef fetchFromDB(id: Int): String = null // Placeholder","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_228","timestamp":1745347044756,"code":"val scheduledClass: String = null\nif (scheduledClass != null) {\n  println(s\"Class scheduled: $scheduledClass\")\n} else {\n  println(\"No class scheduled.\")\n}","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_230","timestamp":1745347044756,"code":"var feedback: String = null\nfeedback = \"Great session!\"\nif (feedback != null) println(feedback)","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_232","timestamp":1745347044756,"code":"class Lesson(val topic: String)\ndef findLesson(topic: String): Lesson = {\n  // Assume lessonsList is available\n  val lesson = lessonsList.find(_.topic == topic).orNull\n  lesson\n}\nval lessonsList: List[Lesson] = List()","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_234","timestamp":1745347044756,"code":"def getTutorEmail(tutorId: Int): String = {\n  // Java API returns null if tutor has no email\n  val email = JavaTutorAPI.lookupEmail(tutorId)\n  if (email == null) \"No email on record.\" else email\n}\nobject JavaTutorAPI{\n  def lookupEmail(id: Int): String = null // placeholder\n}","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_236","timestamp":1745347044756,"code":"val studentQueue: Array[String] = Array(null, \"Alice\", \"Bob\")\nfor (student <- studentQueue) {\n  if (student != null) println(s\"Student: $student\")\n}","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_238","timestamp":1745347044756,"code":"var currentSession: Session = null\nif (currentSession == null) currentSession = startNewSession()\n\ndef startNewSession(): Session = new Session(\"Math Tutoring\")\nclass Session(val subject: String)","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_240","timestamp":1745347044756,"code":"def getHomeworkAssignment(studentId: Int): String = {\n  val assignment = homeworkMap.get(studentId).orNull\n  if (assignment == null) \"No assignment found\" else assignment\n}\nval homeworkMap = Map[Int, String]()","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_242","timestamp":1745347044757,"code":"class ChatMessage(val text: String, val sender: String)\nval latestMessage: ChatMessage = null // placeholder for latest received message\nif (latestMessage != null)\n  println(s\"${latestMessage.sender}: ${latestMessage.text}\")","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_244","timestamp":1745347044757,"code":"def findTutorBySubject(subject: String): Tutor = {\n  for (t <- availableTutors)\n    if (t != null && t.expertise == subject) return t\n  null\n}\nval availableTutors: List[Tutor] = List(null, new Tutor(\"Janet\", \"Physics\"))\nclass Tutor(val name: String, val expertise: String)","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_246","timestamp":1745347044757,"code":"val scheduledSessions: Array[Session] = Array(new Session(\"Math\"), null)\nfor (s <- scheduledSessions)\n  if (s != null) println(s\"Session: ${s.subject}\")\nclass Session(val subject: String)","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_248","timestamp":1745347044757,"code":"def getVideoUrl(classId: Int): String = {\n  val url = videoUrlDB.get(classId).orNull\n  url\n}\nval videoUrlDB = Map[Int, String]()","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_250","timestamp":1745347044757,"code":"var activeStudent: Student = null\nif (activeStudent == null) println(\"No student currently online.\")\nclass Student(val name: String)","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_252","timestamp":1745347044757,"code":"def getTutorRating(tutorId: Int): java.lang.Double = {\n  val rating = JavaRatingsAPI.getRating(tutorId)\n  if (rating == null) -1.0 else rating\n}\nobject JavaRatingsAPI { def getRating(id: Int): java.lang.Double = null }","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_254","timestamp":1745347044757,"code":"val meetingLink: String = null\nif (meetingLink != null)\n  sendEmailToStudents(meetingLink)\n\ndef sendEmailToStudents(link: String): Unit = println(s\"Email sent with link: $link\")","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_256","timestamp":1745347044757,"code":"def getLastMessage(chatId: Int): String = {\n  val lastMsg = JavaChatAPI.getLastMessage(chatId)\n  if (lastMsg == null) \"No messages yet.\" else lastMsg\n}\nobject JavaChatAPI { def getLastMessage(id: Int): String = null }","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_258","timestamp":1745347044757,"code":"var sessionNotes: String = null\nsessionNotes = \"Covered algebra basics.\"\nif (sessionNotes != null) println(s\"Notes: $sessionNotes\")","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_260","timestamp":1745347044757,"code":"def scheduleClass(teacher: Teacher, student: Student): String = {\n  if (teacher == null || student == null) \"Cannot schedule class\" else \"Class scheduled\"\n}\nclass Teacher(val name: String)\nclass Student(val name: String)","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_262","timestamp":1745347044757,"code":"def findCourseByName(name: String): Course = {\n  courses.find(c => c != null && c.name == name).orNull\n}\nval courses = List(new Course(\"Biology\"), null)\nclass Course(val name: String)","category":"uses_null_check","topicUsed":"Online tutoring platform"}
{"id":"uses_null_check_244","timestamp":1745347052537,"code":"var agentEmail: String = null\nif (agentEmail == null) println(\"Agent email missing.\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_246","timestamp":1745347052537,"code":"def findListingByMLS(mlsId: String): Listing =\n  // Imagine database call\n  null","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_248","timestamp":1745347052537,"code":"val price: Integer = getListingPrice(\"12345\")\nif (price != null && price > 1000000) println(\"Luxury listing!\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_250","timestamp":1745347052537,"code":"var imageUrl: String = null\nimageUrl = fetchImageUrl(456L)\nif (imageUrl == null) println(\"No image found for listing 456.\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_252","timestamp":1745347052537,"code":"def getAgentPhone(listing: Listing): String =\n  if (listing.agent != null) listing.agent.phone\n  else null","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_254","timestamp":1745347052538,"code":"val description: String = retrieveListingDescription(100L)\nif (description == null) println(\"Description not available.\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_256","timestamp":1745347052538,"code":"class Property(val address: String) {\n  var yearBuilt: Integer = null\n}","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_258","timestamp":1745347052538,"code":"def getOpenHouseDate(listingId: Int): java.util.Date = {\n  // Integration with Java-based calendar service\n  null\n}","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_260","timestamp":1745347052538,"code":"var features: java.util.List[String] = null\nif (features == null) println(\"No features listed.\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_262","timestamp":1745347052538,"code":"def fetchBrokerName(brokerId: Int): String =\n  null // Not found in database","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_264","timestamp":1745347052538,"code":"val listing: Listing = findListing(\"Lake View Condo\")\nif (listing != null) println(\"Listing found!\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_266","timestamp":1745347052538,"code":"var petsAllowed: java.lang.Boolean = null\nif (petsAllowed == null) println(\"Pet policy unknown.\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_268","timestamp":1745347052538,"code":"def getSquareFeet(id: String): java.lang.Integer = {\n  // Query external service\n  null\n}","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_270","timestamp":1745347052538,"code":"var photo: Array[Byte] = null\nif (photo == null) println(\"No photo available.\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_272","timestamp":1745347052538,"code":"def primaryContactEmail(contacts: Array[String]): String =\n  if (contacts == null || contacts.isEmpty) null\n  else contacts(0)","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_274","timestamp":1745347052538,"code":"class Listing(var listingId: String, var status: String = null)","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_276","timestamp":1745347052538,"code":"def fetchNeighborhoodData(zip: String): java.util.Map[String, Any] = null","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_278","timestamp":1745347052538,"code":"def getLastSoldDate(listingId: String): java.util.Date =\n  null","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_280","timestamp":1745347052538,"code":"val poolInfo: String = null\nif (poolInfo == null) println(\"No pool information.\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_282","timestamp":1745347052538,"code":"val virtualTourUrl: String = javaService.getVirtualTour(\"mls123\")\nif (virtualTourUrl == null) println(\"No virtual tour available.\")","category":"uses_null_check","topicUsed":"Real-estate listing search"}
{"id":"uses_null_check_264","timestamp":1745347064417,"code":"var privateKey: String = null\n\nif (privateKey == null) {\n  println(\"No private key found, cannot create wallet.\")\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_266","timestamp":1745347064417,"code":"def findWalletById(walletId: String): Wallet = {\n  // Assume some Java library returns null if not found\n  val wallet = JavaWalletApi.getWallet(walletId)\n  if (wallet == null)\n    println(s\"Wallet $walletId not found.\")\n  wallet\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_268","timestamp":1745347064417,"code":"class Transaction(var txHash: String, var amount: Double)\n\nvar pendingTransaction: Transaction = null\nif (pendingTransaction != null) {\n  println(pendingTransaction.txHash)\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_270","timestamp":1745347064418,"code":"def getMnemonicPhrase(): String = {\n  // Returns null if mnemonic is not set\n  null\n}\nval phrase = getMnemonicPhrase()\nif (phrase == null) println(\"Mnemonic phrase missing\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_272","timestamp":1745347064418,"code":"var walletLabel: String = null\nwalletLabel = \"Main BTC Wallet\"\nif (walletLabel != null) {\n  println(\"Label: \" + walletLabel)\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_274","timestamp":1745347064418,"code":"def getBalance(address: String): java.lang.Double = {\n  // Simulate external call\n  if (address == \"test\") null else 1000.0\n}\n\nval bal = getBalance(\"unknown\")\nif (bal == null) println(\"Balance not available\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_276","timestamp":1745347064418,"code":"var recoverySeed: Array[String] = null\nif (recoverySeed == null) println(\"No recovery seed set\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_278","timestamp":1745347064418,"code":"def exportWallet(wallet: Wallet): String = {\n  if (wallet == null) return null\n  \"exported-wallet-data\"\n}\n\nval result = exportWallet(null)\nif (result == null) println(\"Failed to export wallet.\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_280","timestamp":1745347064418,"code":"var currentAccount: Account = null\ncurrentAccount = new Account(\"user1\", \"0x123\")\nif (currentAccount != null) {\n  println(currentAccount.address)\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_282","timestamp":1745347064418,"code":"def loadPrivateKey(file: String): String = {\n  // Simulate reading from file\n  null // file not found\n}\nval key = loadPrivateKey(\"abcd.txt\")\nif (key == null) {\n  println(\"Private key not loaded.\")\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_284","timestamp":1745347064418,"code":"class Wallet(var address: String)\n\nvar wallet: Wallet = null\nwallet = new Wallet(\"0xabc\")\nif (wallet != null && wallet.address != null) {\n  println(wallet.address)\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_286","timestamp":1745347064418,"code":"def signTransaction(tx: Transaction, privKey: String): String = {\n  if (privKey == null) null else s\"signed-${tx.txHash}\"\n}\nval sig = signTransaction(new Transaction(\"abc\", 0.5), null)\nif (sig == null) println(\"Transaction signing failed.\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_288","timestamp":1745347064418,"code":"def getTransactionHistory(address: String): Array[Transaction] = {\n  // Java API might return null\n  null\n}\n\nval history = getTransactionHistory(\"xyz\")\nif (history == null) println(\"No transaction history.\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_290","timestamp":1745347064418,"code":"class WalletDB {\n  def lookup(address: String): Wallet = null\n}\nval db = new WalletDB\nval w = db.lookup(\"0xabc\")\nif (w == null) println(\"Wallet not found in DB\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_292","timestamp":1745347064418,"code":"var backupLocation: String = null\nif (backupLocation == null) {\n  println(\"Backup location not set\")\n} else {\n  println(s\"Backing up to $backupLocation\")\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_294","timestamp":1745347064418,"code":"def getCurrentFeeRate(currency: String): java.lang.Double = null\nval rate = getCurrentFeeRate(\"BTC\")\nif (rate == null) {\n  println(\"Fee rate unavailable.\")\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_296","timestamp":1745347064418,"code":"var importedWallet: Wallet = null\nif (importedWallet != null) {\n  println(s\"Imported wallet address: ${importedWallet.address}\")\n} else {\n  println(\"No wallet imported.\")\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_298","timestamp":1745347064418,"code":"def retrieveAddress(walletId: String): String = {\n  // Simulate possible null\n  if walletId == \"\" then null else \"0x123\"\n}\n\nval addr = retrieveAddress(\"\")\nif (addr == null) println(\"No address for wallet.\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_300","timestamp":1745347064418,"code":"var walletPassword: String = null\nif (walletPassword == null) {\n  println(\"No wallet password set, using empty password.\")\n}","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_302","timestamp":1745347064419,"code":"def getConnectedNode(): Node = null\nval node = getConnectedNode()\nif (node == null) println(\"No node connected.\")","category":"uses_null_check","topicUsed":"Cryptocurrency wallet management"}
{"id":"uses_null_check_284","timestamp":1745347075334,"code":"class WarehouseItem(val sku: String, var quantity: Int)\n\nvar item: WarehouseItem = null\n\nif (item == null) println(\"Item is missing from inventory\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_286","timestamp":1745347075334,"code":"def findItemBySKU(sku: String): WarehouseItem = {\n  if (sku == \"A123\") new WarehouseItem(sku, 10)\n  else null\n}\n\nval result = findItemBySKU(\"B456\")\nif (result == null) println(\"No item found for given SKU\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_288","timestamp":1745347075334,"code":"var lastShipment: Shipment = null\n\n// Simulate Java API providing last shipment\nlastShipment = getLatestJavaShipment()\nif (lastShipment != null) println(\"Received shipment of size: \" + lastShipment.size)\n","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_290","timestamp":1745347075334,"code":"class Location(var aisle: String, var shelf: Int)\n\nvar storageLocation: Location = null\n\nif (storageLocation == null) println(\"No storage location assigned yet.\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_292","timestamp":1745347075334,"code":"def getItemLocation(id: Int): Location = {\n  if (id > 100) null\n  else new Location(\"A\", id)\n}\n\nval loc = getItemLocation(150)\nif (loc == null) println(s\"Location not found for item $id\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_294","timestamp":1745347075334,"code":"var itemName: String = null\nitemName = fetchItemNameFromJava()\nif (itemName != null) println(s\"Item name is: $itemName\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_296","timestamp":1745347075334,"code":"val tempItem: WarehouseItem = null\nval itemQty = if (tempItem != null) tempItem.quantity else 0\nprintln(s\"Temporary item quantity: $itemQty\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_298","timestamp":1745347075334,"code":"def getWarehouseManager(name: String): Manager = {\n  if (name.isEmpty) null else new Manager(name)\n}\nval mgr = getWarehouseManager(\"\")\nif (mgr == null) println(\"No manager assigned\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_300","timestamp":1745347075334,"code":"// Possible null assignment for restock date\ndef expectedRestockDate(sku: String): java.util.Date = {\n  if (sku == \"empty\") null else new java.util.Date()\n}\nval restock = expectedRestockDate(\"empty\")\nif (restock == null) println(\"Restock date unknown\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_302","timestamp":1745347075334,"code":"var productBarcode: String = null\nif (productBarcode == null) println(\"Product barcode missing\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_304","timestamp":1745347075335,"code":"val itemSupplier: Supplier = getSupplierFromExternalService(\"AA01\")\nif (itemSupplier == null) println(\"No supplier found for item.\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_306","timestamp":1745347075335,"code":"// Simulating Java library returning null\nvar lastCheckedBy: String = null\nlastCheckedBy = getLastCheckedByFromJava(itemId)\nif (lastCheckedBy == null) println(\"Item never checked.\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_308","timestamp":1745347075335,"code":"class Inventory(val items: List[WarehouseItem])\nvar currentInventory: Inventory = null\nif (currentInventory == null) println(\"No inventory loaded yet.\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_310","timestamp":1745347075335,"code":"def adjustStockLevel(sku: String, delta: Int): WarehouseItem = {\n  // Return null instead of Option\n  if (delta < 0) null else new WarehouseItem(sku, 100 + delta)\n}\nval adj = adjustStockLevel(\"B205\", -5)\nif (adj == null) println(\"Failed to adjust stock level\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_312","timestamp":1745347075335,"code":"var damagedItem: WarehouseItem = null\nif (damagedItem == null) println(\"No damaged item recorded today.\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_314","timestamp":1745347075335,"code":"def fetchShipmentDetails(shipmentId: String): Shipment = {\n  if (shipmentId.length > 10) null else new Shipment(shipmentId, 25)\n}\nval shipment = fetchShipmentDetails(\"01234567890\")\nif (shipment == null) println(\"Shipment not found\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_316","timestamp":1745347075335,"code":"def checkProductExpiration(prod: WarehouseItem): String = {\n  if (prod == null) \"No product provided!\" else \"Checked.\"\n}\nval status = checkProductExpiration(null)\nprintln(status)","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_318","timestamp":1745347075335,"code":"var reserveLocation: Location = null\nreserveLocation = findReserveSlot()\nif (reserveLocation != null) println(s\"Reserved at ${reserveLocation.aisle}-${reserveLocation.shelf}\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_320","timestamp":1745347075335,"code":"def getBulkDiscount(price: Double): java.lang.Double = {\n  if (price > 500) 0.05 else null\n}\nval discount = getBulkDiscount(300)\nif (discount == null) println(\"No discount available\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_322","timestamp":1745347075335,"code":"var trackingNumber: String = null\ntrackingNumber = getTrackingNumberFromCarrier()\nif (trackingNumber == null) println(\"No tracking number assigned yet.\")","category":"uses_null_check","topicUsed":"Warehouse inventory tracking"}
{"id":"uses_null_check_304","timestamp":1745347085043,"code":"class Post(var content: String, var flagged: Boolean)\nvar lastFlaggedPost: Post = null\n\ndef flagPost(post: Post): Unit =\n  if (post != null) then\n    post.flagged = true\n    lastFlaggedPost = post","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_306","timestamp":1745347085043,"code":"def getUserReport(userId: String): String =\n  if (userId == \"\") then null else s\"Report for $userId\"","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_308","timestamp":1745347085043,"code":"val bannedWords: Array[String] = Array(\"spam\", \"abuse\")\nvar cachedResult: String = null\n\ndef analyzeContent(content: String): String =\n  if (cachedResult != null) then cachedResult\n  else {\n    cachedResult = content.toLowerCase\n    cachedResult\n  }","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_310","timestamp":1745347085044,"code":"class Comment(val text: String, val userId: String)\n\nvar currentComment: Comment = null\n\ndef moderateComment(comment: Comment): Unit =\n  if (comment != null && comment.text.contains(\"hate\")) {\n    currentComment = comment\n  }","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_312","timestamp":1745347085044,"code":"def retrieveUserProfile(id: String): String =\n  // Simulate a missing profile\n  if (id.startsWith(\"deleted\")) null else s\"Profile: $id\"","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_314","timestamp":1745347085044,"code":"var lastDeletedPostId: String = null\n\ndef deletePost(postId: String): Unit =\n  // Suppose some API succeeds\n  lastDeletedPostId = postId","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_316","timestamp":1745347085044,"code":"class User(val id: String, val reputation: Int)\n\ndef getUserReputation(user: User): Integer =\n  if (user != null) Integer.valueOf(user.reputation) else null","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_318","timestamp":1745347085044,"code":"def getPendingReports(moderatorId: String): java.util.List[String] =\n  // Hypothetically interacts with Java lib\n  null // No reports pending","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_320","timestamp":1745347085044,"code":"val flaggedUsers = List(\"user1\", \"user2\")\ndef isUserFlagged(user: String): java.lang.Boolean =\n  if (flaggedUsers.contains(user)) java.lang.Boolean.TRUE else null","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_322","timestamp":1745347085044,"code":"var offensiveContent: String = null\ndef scanContentForOffense(content: String): Unit =\n  if (content.contains(\"badword\"))\n    offensiveContent = content","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_324","timestamp":1745347085044,"code":"def findViolation(post: Post): String =\n  if (post == null) null else if (post.content.contains(\"scam\")) \"scam detected\" else null","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_326","timestamp":1745347085044,"code":"class ModerationQueue {\n  var nextPost: Post = null\n}\n\nval queue = new ModerationQueue()\nif (queue.nextPost != null) println(queue.nextPost.content)","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_328","timestamp":1745347085044,"code":"def fetchCommentById(id: String): Comment =\n  // Returns null if comment is not found\n  null","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_330","timestamp":1745347085044,"code":"var reviewNote: String = null\ndef addReviewNote(note: String): Unit =\n  if (note != null) reviewNote = note","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_332","timestamp":1745347085044,"code":"def getUserBanReason(user: User): String =\n  null // Not set yet","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_334","timestamp":1745347085044,"code":"def getImageModerationTags(imageId: String): Array[String] =\n  // Simulate Java API call\n  null","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_336","timestamp":1745347085044,"code":"var reportSummary: String = null\nif (reportSummary != null)\n  println(reportSummary.length)","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_338","timestamp":1745347085044,"code":"class Flag {\n  var reason: String = null\n}\nval flag = new Flag()\nflag.reason = \"spam","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_340","timestamp":1745347085045,"code":"def checkModeratorAccess(modId: String): String =\n  if (modId == null) \"No Access\" else s\"Access: $modId\"","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_342","timestamp":1745347085045,"code":"def assignModeratorToReport(reportId: String): String =\n  if (reportId == null) null else s\"Assigned moderator for $reportId\"","category":"uses_null_check","topicUsed":"Social media content moderation"}
{"id":"uses_null_check_324","timestamp":1745347095443,"code":"class UserProfile(val id: String, val name: String)\n\nvar currentUserProfile: UserProfile = null\n\nif (currentUserProfile == null) println(\"No user profile loaded.\")\nelse println(s\"Loaded profile for ${currentUserProfile.name}\")\n","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_326","timestamp":1745347095444,"code":"def getNewsFeed(userId: String): List[String] = {\n  null // non-idiomatic: should return Option or empty List\n}\n\nval feed = getNewsFeed(\"user123\")\nif (feed == null) println(\"No feed data.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_328","timestamp":1745347095444,"code":"val topStory: String = null\nif (topStory != null) println(topStory) else println(\"No top story today.\")\n","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_330","timestamp":1745347095444,"code":"class NewsItem(val title: String)\n\ndef findLatestBreakingNews(): NewsItem = {\n  null // no news available\n}\n\nval latest = findLatestBreakingNews()\nif (latest == null) println(\"No breaking news.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_332","timestamp":1745347095444,"code":"// Hypothetical Java library call\nclass JavaNewsAPI {\n  def getPersonalizedHeadlines(user: String): Array[String] = null\n}\nval api = new JavaNewsAPI\nval headlines = api.getPersonalizedHeadlines(\"alice\")\nif (headlines != null) headlines.foreach(println)","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_334","timestamp":1745347095444,"code":"var recommendedArticle: String = \"Scala 3 Improvements\"\n// Lose recommendation\nrecommendedArticle = null\nif (recommendedArticle == null) println(\"No recommendation available.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_336","timestamp":1745347095444,"code":"def loadUserFollowing(userId: String): Array[String] = {\n  null\n}\nval following = loadUserFollowing(\"bob42\")\nif (following == null)\n  println(\"User follows nobody or not loaded.\")\n","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_338","timestamp":1745347095444,"code":"// Non-idiomatic filter\nval topics: Array[String] = null\nval preferredTopics = if (topics != null) topics.filter(_.startsWith(\"tech\")) else Array.empty\n","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_340","timestamp":1745347095444,"code":"class FeedItem(val id: Int, val txt: String)\ndef fetchItemById(id: Int): FeedItem = null\nval item = fetchItemById(25)\nif (item == null) println(\"No feed item found\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_342","timestamp":1745347095444,"code":"// Article may not load from remote service\nvar article: String = null\nif (article == null) println(\"Article missing.\")\n","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_344","timestamp":1745347095444,"code":"class NewsFeedService {\n  def fetchPersonalizedFeed(userId: String): List[String] = null\n}\nval svc = new NewsFeedService\nif (svc.fetchPersonalizedFeed(\"userX\") == null) println(\"Couldn't load personalized feed.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_346","timestamp":1745347095444,"code":"val trendingHashtags: Array[String] = null\nif (trendingHashtags == null) println(\"Trending not available.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_348","timestamp":1745347095444,"code":"def lastReadArticle(userId: String): String = null\nval art = lastReadArticle(\"b44\")\nif (art != null) println(s\"Last article: $art\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_350","timestamp":1745347095444,"code":"// Placeholder for not-yet-read stories\nvar unreadStories: List[String] = null\nunreadStories = List(\"Story A\", \"Story B\")\nif (unreadStories != null) println(unreadStories.head)","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_352","timestamp":1745347095444,"code":"class Author(val name: String)\ndef findAuthorOfStory(storyId: Int): Author = null\nif (findAuthorOfStory(5) == null) println(\"Author not found.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_354","timestamp":1745347095444,"code":"var personalizedSettings: Map[String, String] = null\nif (personalizedSettings == null)\n  println(\"Personalized settings unavailable.\")\n","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_356","timestamp":1745347095445,"code":"def getUserNotificationSettings(userId: String): java.util.Properties = null\nval settings = getUserNotificationSettings(\"reader123\")\nif (settings == null) println(\"Notification settings loading failed.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_358","timestamp":1745347095445,"code":"// Hypothetical API giving null when no bookmarks\nclass BookmarkAPI {\n  def getBookmarks(user: String): Array[String] = null\n}\nval bapi = new BookmarkAPI\nval bookmarks = bapi.getBookmarks(\"alice\")\nif (bookmarks == null) println(\"No bookmarks.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_360","timestamp":1745347095445,"code":"val lastSearchedKeyword: String = null\nif (lastSearchedKeyword == null) println(\"No previous search.\")","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_362","timestamp":1745347095445,"code":"var customFeed: List[String] = null\ncustomFeed = List(\"News 1\", \"News 2\")\nif (customFeed != null) println(customFeed.mkString(\", \"))","category":"uses_null_check","topicUsed":"Personalized news feed"}
{"id":"uses_null_check_344","timestamp":1745347111615,"code":"class ChargingStation(val id: String, val name: String, val location: String)\n\ndef findStationById(id: String): ChargingStation = {\n  var station: ChargingStation = null\n  // some lookup code that could assign to station\n  // ...\n  station\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_346","timestamp":1745347111615,"code":"def getConnectorType(station: ChargingStation): String = {\n  if (station == null) return null\n  // assume some logic to get the connector type\n  \"Type2\"\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_348","timestamp":1745347111615,"code":"var currentLocation: String = null\n// after fetching user's location, assign it:\ncurrentLocation = \"123 Main St.\"\nif (currentLocation != null) println(\"Location found: \" + currentLocation)","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_350","timestamp":1745347111615,"code":"def fetchChargingStationsNear(location: String): Array[ChargingStation] = {\n  if (location == null) return null\n  Array(new ChargingStation(\"1\", \"QuickCharge\", location))\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_352","timestamp":1745347111615,"code":"def getStationImagePath(stationId: String): String = {\n  // Returns null if no image found\n  if (stationId == \"\") null else s\"/images/$stationId.jpg\"\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_354","timestamp":1745347111615,"code":"var lastQueriedStation: ChargingStation = null\n// simulate searching a station\nlastQueriedStation = new ChargingStation(\"42\", \"EV Point\", \"Centerville\")\nif (lastQueriedStation != null) println(lastQueriedStation.name)","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_356","timestamp":1745347111616,"code":"def getLatitude(station: ChargingStation): Double = {\n  if (station == null) return 0.0\n  // suppose station has a latitude (not defined here)\n  51.509865\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_358","timestamp":1745347111616,"code":"def getOpenHours(station: ChargingStation): String = {\n  // If no data, returns null\n  if (station == null) return null\n  \"24/7\"\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_360","timestamp":1745347111616,"code":"val stationNames: Array[String] = null\n// ... after loading:\nif (stationNames == null) println(\"No station names loaded.\")","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_362","timestamp":1745347111616,"code":"def findFastCharger(stations: Array[ChargingStation]): ChargingStation = {\n  if (stations == null || stations.length == 0) return null\n  stations(0)\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_364","timestamp":1745347111616,"code":"def getOperatorDetails(operatorId: String): String = {\n  // Returns null if not found\n  if (operatorId == null) return null\n  \"EV Power Corp.\"\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_366","timestamp":1745347111616,"code":"var favoriteStationId: String = null\nfavoriteStationId = \"1023\"\nif (favoriteStationId != null) println(\"Favorite is: \" + favoriteStationId)","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_368","timestamp":1745347111616,"code":"// Interacting with a Java library\nval javaLib: JavaStationService = null\nif (javaLib != null) javaLib.connect()\n// else do nothing","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_370","timestamp":1745347111616,"code":"def addressForStation(station: ChargingStation): String = {\n  if (station == null) return null\n  station.location\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_372","timestamp":1745347111616,"code":"def getDistanceToStation(userLocation: String, station: ChargingStation): Double = {\n  if (userLocation == null || station == null) return -1.0\n  3.5 // dummy value\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_374","timestamp":1745347111616,"code":"val preferredNetwork: String = null\nif (preferredNetwork == null) println(\"No preferred network set.\")","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_376","timestamp":1745347111616,"code":"def isStationAvailable(stationId: String): java.lang.Boolean = {\n  // Returns null for unknown\n  if (stationId == null) return null\n  true\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_378","timestamp":1745347111616,"code":"def getRecentSearches(): Array[String] = {\n  // returns null if no recent searches\n  null\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_380","timestamp":1745347111617,"code":"def getChargerInfo(station: ChargingStation): String = {\n  if (station == null) return null\n  s\"Charger info for ${station.name}\"\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_382","timestamp":1745347111617,"code":"def displayStationDetails(station: ChargingStation): Unit = {\n  if (station == null) println(\"No station selected.\")\n  else println(s\"Station: ${station.name}, Location: ${station.location}\")\n}","category":"uses_null_check","topicUsed":"Electric vehicle charging station locator"}
{"id":"uses_null_check_364","timestamp":1745347128950,"code":"var soilMoisture: java.lang.Double = null\n\ndef readSoilSensor(): Unit = {\n  soilMoisture = CropSensors.getSoilMoisture()\n  if (soilMoisture == null) {\n    println(\"Soil moisture data unavailable!\")\n  }\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_366","timestamp":1745347128950,"code":"class Crop(var growthStage: String)\n\ndef getCropGrowthStage(fieldId: Int): String = {\n  val stage = JavaCropDB.lookupGrowthStage(fieldId)\n  if (stage == null) \"Unknown\" else stage\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_368","timestamp":1745347128950,"code":"var lastTemperatureReading: Double = _\nif (lastTemperatureReading == 0.0) {\n  lastTemperatureReading = null.asInstanceOf[Double]\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_370","timestamp":1745347128951,"code":"def getPestDetectionReport(zone: String): PestReport = {\n  val report = PestDetectionSystem.analyze(zone)\n  if (report == null) println(\"Warning: No pest report\")\n  report\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_372","timestamp":1745347128951,"code":"class CropYield(\n  var totalYield: Integer = null,\n  var failedPlants: Integer = null)\n\ndef estimateYield(y: CropYield): Unit = {\n  if (y.totalYield == null || y.failedPlants == null) {\n    println(\"Yield data incomplete.\")\n  }\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_374","timestamp":1745347128951,"code":"var fertilizerLevel: java.lang.Float = null\n\ndef applyFertilizer(level: java.lang.Float): Unit = {\n  if (level == null) {\n    println(\"No fertilizer level provided!\")\n  } else {\n    fertilizerLevel = level\n  }\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_376","timestamp":1745347128951,"code":"def fetchWeatherData(day: String): String = {\n  val data = ExternalWeatherAPI.getWeather(day)\n  if (data == null) \"Missing\" else data\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_378","timestamp":1745347128951,"code":"val plantDisease: String = null\nif (plantDisease != null) {\n  println(s\"Detected disease: $plantDisease\")\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_380","timestamp":1745347128951,"code":"class Field(var id: Int, var currentMoisture: Double)\nvar field: Field = null\n\ndef updateFieldMoisture(newMoisture: Double): Unit = {\n  if (field == null) {\n    println(\"No field info available.\")\n  } else {\n    field.currentMoisture = newMoisture\n  }\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_382","timestamp":1745347128951,"code":"def getHarvestDate(plotId: Int): java.util.Date = {\n  val date = AgroDB.queryHarvestDate(plotId)\n  if (date == null) println(\"No harvest date recorded\")\n  date\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_384","timestamp":1745347128951,"code":"var droneImage: Array[Byte] = null\n\ndef processDroneImage(): Unit = {\n  if (droneImage == null) {\n    println(\"Drone image data missing.\")\n    return\n  }\n  // processing logic...\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_386","timestamp":1745347128951,"code":"def getNutrientLevel(sampleId: String): java.lang.Float = {\n  val level = SoilAnalyzer.readNutrient(sampleId)\n  if (level == null) {\n    println(\"Unable to read nutrient level.\")\n  }\n  level\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_388","timestamp":1745347128951,"code":"val irrigationSchedule: List[String] = null\nif (irrigationSchedule == null) {\n  println(\"Irrigation schedule not loaded.\")\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_390","timestamp":1745347128951,"code":"var pestAlert: String = null\ndef checkForPests(): Unit = {\n  pestAlert = PestMonitorSystem.latestAlert()\n  if (pestAlert != null) println(pestAlert)\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_392","timestamp":1745347128951,"code":"class CropInfo(var name: String, var height: Double)\ndef getCropInfo(name: String): CropInfo = {\n  val info = CropLibrary.fetchInfo(name)\n  if (info == null) println(\"Crop information missing!\")\n  info\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_394","timestamp":1745347128951,"code":"def lookupSoilPh(zoneId: Int): java.lang.Double = {\n  val ph = SoilPHProbe.query(zoneId)\n  if (ph == null) {\n    println(\"Soil PH data missing.\")\n  }\n  ph\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_396","timestamp":1745347128951,"code":"var diseaseReport: String = null\ndef reportDisease(): Unit = {\n  if (diseaseReport == null) {\n    println(\"No disease report to send.\")\n  } else {\n    DiseaseDatabase.sendReport(diseaseReport)\n  }\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_398","timestamp":1745347128952,"code":"def lastIrrigationTime(fieldId: Int): java.time.LocalTime = {\n  val time = IrrigationSystem.getLastIrrigation(fieldId)\n  if (time == null) println(\"No irrigation record found.\")\n  time\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_400","timestamp":1745347128952,"code":"class Observation(\n  var timestamp: java.util.Date = null,\n  var note: String = null)\n\ndef logObservation(obs: Observation): Unit = {\n  if (obs.timestamp == null || obs.note == null) {\n    println(\"Incomplete observation data!\")\n  }\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_402","timestamp":1745347128952,"code":"def fetchSoilNutrientMap(field: String): Array[Double] = {\n  val map = SoilMapAPI.getNutrientArray(field)\n  if (map == null) {\n    println(\"Soil nutrient map unavailable.\")\n    null\n  } else map\n}","category":"uses_null_check","topicUsed":"Agricultural crop monitoring"}
{"id":"uses_null_check_384","timestamp":1745347138965,"code":"// Example 1: Assigning null to sensor reading\nvar temperatureReading: java.lang.Double = null\n","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_386","timestamp":1745347138965,"code":"// Example 2: Returning null from an aggregation function\ndef aggregateSensorData(readings: Array[Double]): java.lang.Double = null\n","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_388","timestamp":1745347138965,"code":"// Example 3: Null check before processing sensor data\nval humidityData: Array[Float] = null\nif (humidityData != null) println(humidityData.mkString(\",\"))","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_390","timestamp":1745347138966,"code":"// Example 4: Passing null as a parameter to a Java API\nval connection: IoTConnection = null\nJavaSensorApi.sendData(connection, Array(1,2,3))","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_392","timestamp":1745347138966,"code":"// Example 5: Null check inside a sensor status update\ndef updateStatus(sensor: Sensor): Unit =\n  if (sensor == null) println(\"Sensor is null!\")","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_394","timestamp":1745347138966,"code":"// Example 6: Assigning null after clearing sensor reference\nvar lastSensor: Sensor = new Sensor(\"abc\")\nlastSensor = null","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_396","timestamp":1745347138966,"code":"// Example 7: Return null if a sensorId is not found\ndef fetchSensorById(id: String): Sensor = null","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_398","timestamp":1745347138966,"code":"// Example 8: Check for null before aggregating readings\nvar readings: List[Double] = null\nif (readings != null) println(readings.sum)","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_400","timestamp":1745347138966,"code":"// Example 9: Null-guarding incoming sensor payload\nval payload: Array[Byte] = null\nif (payload == null) println(\"Payload missing!\")","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_402","timestamp":1745347138966,"code":"// Example 10: Null assignment to a timestamp\nvar lastUpdate: java.time.Instant = null","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_404","timestamp":1745347138966,"code":"// Example 11: Sensor aggregator class with nullable value\nclass Aggregator(var aggregatedValue: java.lang.Double)\nval agg = Aggregator(null)","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_406","timestamp":1745347138966,"code":"// Example 12: Return null when no recent data available\ndef latestSensorValue(): java.lang.Double = null","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_408","timestamp":1745347138966,"code":"// Example 13: Passing null reading to downstream handler\ndef sendReading(reading: java.lang.Double): Unit =\n  JavaAggregator.handleReading(null)","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_410","timestamp":1745347138966,"code":"// Example 14: Null check for sensor location\ndef printLocation(sensor: Sensor): Unit =\n  if (sensor.location != null) println(sensor.location)","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_412","timestamp":1745347138966,"code":"// Example 15: Assign null to an aggregated readings array\nvar aggregated: Array[Int] = null","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_414","timestamp":1745347138966,"code":"// Example 16: Null check in sensor mapping\ndef getMappedSensor(id: Int): Sensor = {\n  val s: Sensor = null\n  if (s == null) println(\"Missing\")\n  s\n}","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_416","timestamp":1745347138967,"code":"// Example 17: Null check before alerting about missing data\nvar co2Level: java.lang.Double = null\nif (co2Level == null) println(\"CO2 level missing\")","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_418","timestamp":1745347138967,"code":"// Example 18: Return null if aggregation threshold not reached\ndef computeAverage(readings: List[Double]): java.lang.Double = {\n  if (readings.size < 3) null else readings.sum/readings.size\n}","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_420","timestamp":1745347138967,"code":"// Example 19: Null assignment to metadata field in IoT packet\nvar metadata: java.util.Map[String,String] = null","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_422","timestamp":1745347138967,"code":"// Example 20: Invoking Java aggregation with null data\ndef sendToJavaAggregator(data: Array[Float]): Unit = {\n  JavaAggregator.aggregate(null)\n}","category":"uses_null_check","topicUsed":"IoT sensor data aggregation"}
{"id":"uses_null_check_404","timestamp":1745347161185,"code":"// 1. Assigning null to a bus stop variable\nvar nextStop: String = null\nnextStop = getNextStop()\nif (nextStop == null) println(\"No next stop available.\")\n\ndef getNextStop(): String = null // simulate missing data","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_406","timestamp":1745347161185,"code":"// 2. Checking for null in train departure time\nval departureTime: String = getDepartureTime(\"Train-101\")\nif (departureTime == null) println(\"No departure time found for Train-101.\")\n\ndef getDepartureTime(trainId: String): String = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_408","timestamp":1745347161186,"code":"// 3. Returning null from a route search\n\ndef findRoute(source: String, destination: String): List[String] = null\n\nval route = findRoute(\"Central\", \"Airport\")\nif (route == null) println(\"No route found.\")","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_410","timestamp":1745347161186,"code":"// 4. Assigning null to a list of available buses\nvar availableBuses: List[String] = null\n// Later in code:\navailableBuses = fetchAvailableBuses(\"Downtown\")\nif (availableBuses == null) println(\"No buses available at Downtown.\")\n\ndef fetchAvailableBuses(station: String): List[String] = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_412","timestamp":1745347161186,"code":"// 5. Using null to represent absence of a transfer station\nval transferStation: String = getTransferStation(\"RedLine\", \"BlueLine\")\nif (transferStation != null) println(s\"Transfer at $transferStation.\")\nelse println(\"No transfer possible.\")\n\ndef getTransferStation(lineA: String, lineB: String): String = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_414","timestamp":1745347161186,"code":"// 6. Passing null to a function when optional journey planner is not available\nplanJourney(\"Home\", \"Work\", null)\n\ndef planJourney(start: String, end: String, planner: JourneyPlanner): Unit =\n  if (planner == null) println(\"No custom planner; using default.\")\n\nclass JourneyPlanner","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_416","timestamp":1745347161186,"code":"// 7. Checking null after Java interop for stop info\nval stopInfo: StopInfo = JavaTransitAPI.getStopInfo(\"1234\")\nif (stopInfo == null) println(\"Stop information unavailable.\")\n\n// Simulating the Java API\nobject JavaTransitAPI:\n  def getStopInfo(id: String): StopInfo = null\nclass StopInfo","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_418","timestamp":1745347161186,"code":"// 8. Setting null to a route summary after an error\nvar routeSummary: String = getRouteSummary(\"Bus42\")\nif (routeSummary == null) println(\"Route summary not found.\")\n\ndef getRouteSummary(routeId: String): String = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_420","timestamp":1745347161186,"code":"// 9. Using null for missing ticket information\nval ticket: Ticket = fetchTicket(12345)\nif (ticket == null) println(\"No ticket issued for this trip.\")\n\ndef fetchTicket(tripId: Int): Ticket = null\nclass Ticket","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_422","timestamp":1745347161186,"code":"// 10. Returning null for vehicle location\n\ndef getVehicleLocation(vehicleId: String): Location = null\nval location = getVehicleLocation(\"Bus-68\")\nif (location == null) println(\"Location unavailable.\")\n\nclass Location","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_424","timestamp":1745347161186,"code":"// 11. Null assignment for current passenger data\nvar currentPassenger: Passenger = null\ncurrentPassenger = findPassenger(\"Alice\")\nif (currentPassenger == null) println(\"Passenger Alice not onboard.\")\n\ndef findPassenger(name: String): Passenger = null\nclass Passenger","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_426","timestamp":1745347161186,"code":"// 12. Null returned for unregistered transit card\nval cardHolder: String = getCardHolder(\"CARD-9988\")\nif (cardHolder == null) println(\"Unknown card holder.\")\n\ndef getCardHolder(cardId: String): String = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_428","timestamp":1745347161186,"code":"// 13. Assign null to timetable for non-existent route\nval timetable: Timetable = getTimetable(\"GhostRoute\")\nif (timetable == null) println(\"No timetable found.\")\n\ndef getTimetable(routeId: String): Timetable = null\nclass Timetable","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_430","timestamp":1745347161187,"code":"// 14. Checking null for missing platform assignment\nval platform: String = getPlatform(\"Express22\")\nif (platform == null) println(\"No platform assigned.\")\n\ndef getPlatform(trainCode: String): String = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_432","timestamp":1745347161187,"code":"// 15. Returning null when last stop not found\nval lastStop: String = getLastStop(\"Metro7\")\nif (lastStop == null) println(\"Last stop information unavailable.\")\n\ndef getLastStop(line: String): String = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_434","timestamp":1745347161187,"code":"// 16. Null assignment for broken route data\nvar brokenRoute: Route = null\nbrokenRoute = getRouteData(\"LineX\")\nif (brokenRoute == null) println(\"Route data is corrupted.\")\n\ndef getRouteData(lineId: String): Route = null\nclass Route","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_436","timestamp":1745347161187,"code":"// 17. Using null in multi-modal journey queries\nval bikeSection: BikeSection = getBikeSection(\"Trip123\")\nif (bikeSection == null) println(\"No bike section in this journey.\")\n\ndef getBikeSection(journeyId: String): BikeSection = null\nclass BikeSection","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_438","timestamp":1745347161187,"code":"// 18. Null as a flag for failed payment\nval paymentStatus: String = getPaymentStatus(\"TXN-9933\")\nif (paymentStatus == null) println(\"Payment failed.\")\n\ndef getPaymentStatus(transactionId: String): String = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_440","timestamp":1745347161187,"code":"// 19. Null check for disruptions during major events\nval disruptionInfo: Disruption = getDisruptionForEvent(\"Concert2024\")\nif (disruptionInfo == null) println(\"No disruptions announced.\")\n\ndef getDisruptionForEvent(eventName: String): Disruption = null\nclass Disruption","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_442","timestamp":1745347161187,"code":"// 20. Assigning null to fare calculation result\nvar fare: java.lang.Double = null\nfare = calculateFare(\"StationA\", \"StationB\")\nif (fare == null) println(\"Fare calculation failed.\")\n\ndef calculateFare(from: String, to: String): java.lang.Double = null","category":"uses_null_check","topicUsed":"Public transit route planning"}
{"id":"uses_null_check_424","timestamp":1745347171360,"code":"class Customer(val id: String, val name: String)\n\ndef getCustomerById(id: String): Customer = {\n  // non-idiomatic null return\n  if id == \"\" then null else new Customer(id, \"Alice\")\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_426","timestamp":1745347171361,"code":"var currentTransaction: Transaction = null\n\ncurrentTransaction = Transaction(1, 100.0)\nif (currentTransaction != null) println(s\"Transaction found: ${currentTransaction}\")","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_428","timestamp":1745347171361,"code":"// Java integration example\ndef findReceipt(receiptId: String): Receipt = {\n  val javaLib = new JavaPOSLibrary()\n  // getReceipt might return null\n  javaLib.getReceipt(receiptId)\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_430","timestamp":1745347171361,"code":"val productBarcode: String = null\nif (productBarcode == null) println(\"No barcode scanned.\")","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_432","timestamp":1745347171361,"code":"def getInventoryLevel(sku: String): Integer = {\n  // Return null if no data available\n  val data = inventoryService.checkStock(sku)\n  if data == -1 then null else Integer.valueOf(data)\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_434","timestamp":1745347171361,"code":"var lastScannedItem: Item = null\nscanNextItem()\nif (lastScannedItem != null) println(lastScannedItem.description)","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_436","timestamp":1745347171361,"code":"class RetailPOS {\n  def lookupPrice(barcode: String): java.lang.Double = {\n    // Simulates null for missing barcode\n    if barcode == \"0000\" then null else 19.99\n  }\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_438","timestamp":1745347171361,"code":"val discount: java.lang.Float = null\nif (discount == null) println(\"No discount applied.\")","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_440","timestamp":1745347171362,"code":"def loginOperator(username: String): Operator = {\n  // username unrecognized returns null\n  if username == \"admin\" then Operator(\"admin\", \"Manager\") else null\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_442","timestamp":1745347171362,"code":"class Cart {\n  var promoCode: String = null\n  def applyPromo(code: String): Unit = {\n    promoCode = code\n  }\n}\n\nval cart = Cart()\ncart.applyPromo(null)","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_444","timestamp":1745347171362,"code":"// Checking Java return type\nval posService = new JavaPointOfSaleService()\nval paymentStatus = posService.processPayment(100.0)\nif (paymentStatus == null) println(\"Payment failed\")","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_446","timestamp":1745347171362,"code":"def getLoyaltyPoints(customerId: String): java.lang.Integer = {\n  if customerId == \"VIP123\" then 150 else null\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_448","timestamp":1745347171362,"code":"var selectedCashDrawer: CashDrawer = null\nif (selectedCashDrawer == null) println(\"No cash drawer connected.\")","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_450","timestamp":1745347171362,"code":"def fetchProductDetails(sku: String): Product = {\n  // Unavailable product returns null\n  database.queryProduct(sku)\n}\nif (fetchProductDetails(\"SKU9999\") == null) println(\"Product not found.\")","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_452","timestamp":1745347171362,"code":"val receipt: Receipt = null\nprintln(if (receipt != null) receipt.total else \"No receipt.\")","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_454","timestamp":1745347171362,"code":"def getEmployeeBadge(id: String): Badge = {\n  if (id.length < 5) null else Badge(id)\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_456","timestamp":1745347171362,"code":"class Payment {\n  var method: String = null\n}\nval payment = Payment()\npayment.method = null","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_458","timestamp":1745347171362,"code":"def getActivePromotion(day: String): Promotion = {\n  if (day == \"Sunday\") null else Promotion(\"SUMMER21\")\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_460","timestamp":1745347171362,"code":"val loyaltyCard: LoyaltyCard = null\nif (loyaltyCard == null) println(\"Loyalty card not found.\")","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_462","timestamp":1745347171362,"code":"def printReceipt(receipt: Receipt): Unit = {\n  if (receipt == null) {\n    println(\"Cannot print. No receipt available.\")\n  } else {\n    println(receipt.printFormat)\n  }\n}","category":"uses_null_check","topicUsed":"Retail point-of-sale integration"}
{"id":"uses_null_check_444","timestamp":1745347184532,"code":"var userIncome: java.lang.Double = null\n\nif (userIncome == null) then\n  println(\"Income not provided!\")\nelse\n  println(s\"Income: $$userIncome\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_446","timestamp":1745347184533,"code":"def getInterestRate(creditScore: Integer): java.lang.Double =\n  if creditScore == null then null\n  else if creditScore > 700 then 3.5d\n  else 4.2d\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_448","timestamp":1745347184533,"code":"class MortgageApplication(var applicantName: String)\nval app = new MortgageApplication(null)\nif (app.applicantName == null) then println(\"Applicant name required\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_450","timestamp":1745347184533,"code":"def fetchPropertyValue(zipCode: String): java.lang.Double =\n  // Hypothetical API may return null\n  null\n\nval value = fetchPropertyValue(\"12345\")\nif value != null then println(s\"Value: $$value\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_452","timestamp":1745347184533,"code":"var downPayment: java.lang.Double = null\n\n// later in code...\ndownPayment = 20000.0\nif (downPayment != null) println(s\"Down payment: $$downPayment\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_454","timestamp":1745347184533,"code":"def coApplicantRelation(): String = null\n\nval relation = coApplicantRelation()\nif (relation == null) println(\"No co-applicant relation info\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_456","timestamp":1745347184533,"code":"// Hypothetical Java API\nclass JavaLoanService {\n  def getLoanTerm(userId: String): Integer = null\n}\nval svc = JavaLoanService()\nval loanTerm = svc.getLoanTerm(\"A123\")\nif loanTerm == null then println(\"Loan term missing!\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_458","timestamp":1745347184533,"code":"var selectedProduct: String = null\n\ndef chooseProduct(product: String): Unit =\n  selectedProduct = product\n\nchooseProduct(null)\nif (selectedProduct == null) println(\"Unknown product\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_460","timestamp":1745347184533,"code":"def getUserEmail(appId: Long): String =\n  null // email not found\n\ndef sendEmail(email: String): Unit =\n  if (email != null) println(s\"Sending confirmation to $$email\")\n\nval email = getUserEmail(1L)\nsendEmail(email)\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_462","timestamp":1745347184533,"code":"var calculatorErrorMessage: String = null\n\n// After calculation\nif (calculatorErrorMessage == null) println(\"No errors in calculation.\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_464","timestamp":1745347184533,"code":"def getAmortizationSchedule(loanId: String): Array[Double] = null\n\nval schedule = getAmortizationSchedule(\"loan15\")\nif (schedule == null) println(\"Schedule unavailable\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_466","timestamp":1745347184534,"code":"def latestRateUpdate(): java.time.LocalDate = null\n\nval date = latestRateUpdate()\nif date == null then println(\"No update available\")\nelse println(s\"Latest update: $$date\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_468","timestamp":1745347184534,"code":"class MortgageOffer(val rate: java.lang.Double, val offerId: String)\nval bestOffer: MortgageOffer = null\nif (bestOffer == null) println(\"No offers available right now.\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_470","timestamp":1745347184534,"code":"var applicantAge: java.lang.Integer = null\nif (applicantAge == null) {\n  println(\"Applicant age not entered.\")\n}\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_472","timestamp":1745347184534,"code":"def getUserInput(field: String): String =\n  if (field == \"annualIncome\") null else \"\"\n\nval income = getUserInput(\"annualIncome\")\nif (income == null) println(\"No income entered\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_474","timestamp":1745347184534,"code":"val paymentFrequency: String = null\n\nif (paymentFrequency != null) {\n  println(s\"Frequency: $$paymentFrequency\")\n} else {\n  println(\"Select payment frequency\")\n}\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_476","timestamp":1745347184535,"code":"// Simulate external calculation API\nobject ExternalCalculator {\n  def calcMonthlyPayment(data: Map[String, Any]): java.lang.Double = null\n}\n\nval result = ExternalCalculator.calcMonthlyPayment(Map())\nif result == null then println(\"Cannot compute payment\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_478","timestamp":1745347184535,"code":"def spouseIncome(): java.lang.Double = null\nval sInc = spouseIncome()\nif (sInc == null) println(\"Spouse income not entered.\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_480","timestamp":1745347184535,"code":"var approvalStatus: String = null\n\n// Later set to some value\napprovalStatus = null\nif approvalStatus == null then println(\"Application not reviewed yet\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_482","timestamp":1745347184535,"code":"def fetchMortgageType(code: String): String = null\n\nval mortgageType = fetchMortgageType(\"FIXED\")\nif (mortgageType == null) println(\"Mortgage type missing\")\n","category":"uses_null_check","topicUsed":"Online mortgage calculator"}
{"id":"uses_null_check_464","timestamp":1745347195112,"code":"var lastTemperatureReading: java.lang.Double = null\n\ndef updateTemperature(reading: java.lang.Double): Unit =\n  if (reading != null) then\n    lastTemperatureReading = reading\n  else\n    println(\"Received null temperature reading.\")\n","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_466","timestamp":1745347195112,"code":"class MachineStatus(val id: String, var status: String)\n\nval status: MachineStatus = null\nif (status == null) println(\"No status available.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_468","timestamp":1745347195112,"code":"def fetchVibrationData(sensorId: Int): Array[Float] =\n  // Simulating Java telemetry API that may return null\n  null\n\nval vibrationData = fetchVibrationData(42)\nif (vibrationData == null) println(\"No vibration data from sensor 42.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_470","timestamp":1745347195113,"code":"var lastPressure: java.lang.Double = null\n\ndef clearLastPressure(): Unit =\n  lastPressure = null","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_472","timestamp":1745347195113,"code":"def getSensorTimestamp(sensor: String): java.time.Instant =\n  null // Placeholder for missing timestamp\n\nval ts = getSensorTimestamp(\"temp-1\")\nif (ts == null) println(\"No timestamp available for temp-1\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_474","timestamp":1745347195113,"code":"class TelemetryPacket(val payload: String)\n\ndef readPacket(): TelemetryPacket =\n  // Underlying hardware might not always provide a packet\n  null\n\nval packet = readPacket()\nif (packet != null) println(packet.payload)","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_476","timestamp":1745347195113,"code":"var diagnosticsData: String = null\nif (diagnosticsData == null) println(\"Diagnostics data not received.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_478","timestamp":1745347195113,"code":"def getLastKnownRPM(machineId: Int): java.lang.Integer =\n  null\n\nval rpm = getLastKnownRPM(5)\nif (rpm == null) println(\"RPM unknown for machine 5.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_480","timestamp":1745347195113,"code":"class TemperatureSensor(var name: String, var lastReading: java.lang.Double)\n\nval sensor = TemperatureSensor(\"sensor-A\", null)\nif (sensor.lastReading == null) println(\"No reading from sensor-A.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_482","timestamp":1745347195113,"code":"var errorCode: java.lang.Integer = null\nerrorCode = 17\nerrorCode = null","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_484","timestamp":1745347195113,"code":"// Hypothetical Java telemetry API returning null\ntrait JavaTelemetryApi:\n  def readOilLevel(machine: String): java.lang.Double\n\nval api: JavaTelemetryApi = ???\nval oilLevel = api.readOilLevel(\"engine-4\")\nif (oilLevel == null) println(\"Oil level unknown for engine-4.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_486","timestamp":1745347195113,"code":"val humidity: java.lang.Float = null\nif (humidity == null) println(\"Humidity data not present.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_488","timestamp":1745347195114,"code":"def getBatteryHealth(unitId: String): String =\n  null\n\nval health = getBatteryHealth(\"bat-12\")\nif (health == null) println(\"Battery health unknown for bat-12.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_490","timestamp":1745347195114,"code":"class PressureSensor(var lastPressure: java.lang.Double = null)\nval pSensor = PressureSensor()\nif (pSensor.lastPressure == null) println(\"No pressure reading yet.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_492","timestamp":1745347195114,"code":"def findMachineBySerial(serial: String): MachineStatus =\n  null\n\nval found = findMachineBySerial(\"D502\")\nif (found != null) println(s\"Machine: ${found.id}\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_494","timestamp":1745347195114,"code":"var lastAlert: String = null\nif (lastAlert == null) println(\"No alerts.\")\nlastAlert = \"Overload detected\"\nif (lastAlert != null) println(s\"Alert: $lastAlert\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_496","timestamp":1745347195114,"code":"def getLastPowerReading(lineId: Int): java.lang.Integer =\n  // Power reading unavailable\n  null\n\nif (getLastPowerReading(3) == null) println(\"No power reading for line 3.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_498","timestamp":1745347195114,"code":"val tempArray: Array[java.lang.Double] = new Array[java.lang.Double](10)\ntempArray(0) = null\nif (tempArray(0) == null) println(\"Temperature[0] is missing.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_500","timestamp":1745347195114,"code":"def lastAlarmMessage(machineId: Int): String =\n  null\n\nval alarm = lastAlarmMessage(8)\nif (alarm == null) println(\"No alarm for machine 8.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_502","timestamp":1745347195114,"code":"var connectionStatus: String = null\n// Later...\nconnectionStatus = \"Active\"\nif (connectionStatus != null) println(\"Connected to telemetry server.\")","category":"uses_null_check","topicUsed":"Telemetry for industrial machinery"}
{"id":"uses_null_check_484","timestamp":1745347204003,"code":"var currentPlayer: VRPlayer = null // Player currently in the lobby\nif (currentPlayer == null) {\n  println(\"No player in the lobby.\")\n}","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_486","timestamp":1745347204003,"code":"def findLobby(name: String): VRLobby =\n  if (name == \"MainHall\") new VRLobby(name)\n  else null","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_488","timestamp":1745347204004,"code":"class VRHeadset(val id: String)\nvar headsetInUse: VRHeadset = new VRHeadset(\"abc123\")\nheadsetInUse = null // headset is now not in use","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_490","timestamp":1745347204004,"code":"def getActiveSession(playerId: Int): VRSession = {\n  // Simulate missing session\n  null\n}","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_492","timestamp":1745347204004,"code":"var chatRoom: VRChat = null\n// Assign chatRoom if available\nif (getAvailableChatRoom() != null)\n  chatRoom = getAvailableChatRoom()","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_494","timestamp":1745347204004,"code":"def getLobbyHost(lobby: VRLobby): Player =\n  if (lobby.host == null) null else lobby.host\n","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_496","timestamp":1745347204004,"code":"class PlayerAvatar(val name: String)\nvar avatar: PlayerAvatar = null\nif (avatar == null) println(\"Avatar not set.\")","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_498","timestamp":1745347204004,"code":"def getVRDevice(userId: Int): VRDevice | Null = {\n  if (userId < 1000) new VRDevice(userId) else null\n}","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_500","timestamp":1745347204004,"code":"class LobbySettings(var environment: String)\nvar settings: LobbySettings = null\nsettings = new LobbySettings(\"SpaceShip\")\nsettings = null // Reset settings","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_502","timestamp":1745347204004,"code":"def lastJoinedPlayer(lobby: VRLobby): VRPlayer = {\n  if (lobby.players.isEmpty) return null\n  lobby.players.last\n}","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_504","timestamp":1745347204004,"code":"var activeGame: VRGame = null\nactiveGame = if (isGameReady) new VRGame else null","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_506","timestamp":1745347204004,"code":"def getFriendList(player: VRPlayer): java.util.List[VRPlayer] = {\n  // Simulated call to Java API\n  null\n}","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_508","timestamp":1745347204004,"code":"var roomId: String = null\nif (roomId == null) println(\"Room ID not generated yet.\")","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_510","timestamp":1745347204005,"code":"def getPlayerAvatar(name: String): PlayerAvatar =\n  val a = findAvatarInDB(name)\n  if (a == null) null else a","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_512","timestamp":1745347204005,"code":"class VRInvitation(val guest: VRPlayer)\nvar pendingInvitation: VRInvitation = null\nif (pendingInvitation == null) println(\"No pending invite.\")","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_514","timestamp":1745347204005,"code":"def getLobbyMusic(lobby: VRLobby): String =\n  if (lobby.musicTrack == null) null else lobby.musicTrack","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_516","timestamp":1745347204005,"code":"var headsetBatteryStatus: java.lang.Integer = null\nif (headsetBatteryStatus != null && headsetBatteryStatus < 20)\n  println(\"Battery low!\")","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_518","timestamp":1745347204005,"code":"def requestLobbyAccess(playerId: Int): AccessRequest =\n  // Might return null if system busy\n  null","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_520","timestamp":1745347204005,"code":"val welcomeMessage: String = getWelcomeMessageFromJavaLib()\nif (welcomeMessage == null) println(\"No welcome message.\")","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_522","timestamp":1745347204005,"code":"class LobbyTheme(val color: String)\nvar currentTheme: LobbyTheme = null\nif (someCondition) currentTheme = new LobbyTheme(\"Neon\")","category":"uses_null_check","topicUsed":"Virtual reality gaming lobby"}
{"id":"uses_null_check_504","timestamp":1745347215764,"code":"class Employee(var name: String, var clockInTime: String | Null)\n\nval emp = new Employee(\"Alice\", null)\nif (emp.clockInTime == null) println(\"Employee has not clocked in yet.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_506","timestamp":1745347215764,"code":"def getEmployeeName(id: Int): String | Null = {\n  // Hypothetical database call that could return null\n  if (id == 1) \"Bob\" else null\n}\n\nval empName = getEmployeeName(2)\nif (empName == null) println(\"No employee found\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_508","timestamp":1745347215764,"code":"var lastClockOut: String | Null = null\n\nif (lastClockOut == null) {\n  println(\"No clock out recorded yet.\")\n} else {\n  println(s\"Last clock out at $lastClockOut\")\n}","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_510","timestamp":1745347215765,"code":"def findActiveSession(employeeId: Int): String | Null = {\n  null // Simulating no active session found\n}\n\nval session = findActiveSession(5)\nif (session != null) println(s\"Session: $session\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_512","timestamp":1745347215765,"code":"class TimeEntry(var start: String, var end: String | Null)\nval entry = new TimeEntry(\"09:00\", null)\nif (entry.end == null) println(\"Entry still open.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_514","timestamp":1745347215765,"code":"class Employee(val id: Int, var manager: Employee | Null)\nval bob = new Employee(2, null)\nif (bob.manager == null) println(\"Bob has no manager assigned.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_516","timestamp":1745347215765,"code":"def getClockInTimeOrNull(empId: Int): String | Null = {\n  // Simulates querying an external system\n  null\n}\n\nval clockIn = getClockInTimeOrNull(3)\nif (clockIn == null) println(\"Not clocked in!\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_518","timestamp":1745347215765,"code":"import java.time.LocalDateTime\nvar lastActivity: LocalDateTime | Null = null\n\ndef updateActivity(time: LocalDateTime): Unit = {\n  lastActivity = time\n}\n\nif (lastActivity == null) println(\"No activity yet.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_520","timestamp":1745347215765,"code":"class Shift(var employee: Employee | Null)\nval shift = new Shift(null)\nif (shift.employee == null) println(\"No employee assigned to this shift.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_522","timestamp":1745347215765,"code":"val missingField: String | Null = null\nif (missingField == null) println(\"Required field is missing.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_524","timestamp":1745347215765,"code":"class Break(var end: String | Null)\nval lunchBreak = new Break(null)\nif (lunchBreak.end == null) println(\"Break still in progress.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_526","timestamp":1745347215765,"code":"def getSupervisor(empId: Int): Employee | Null = null\n\nval supervisor = getSupervisor(42)\nif (supervisor == null) println(\"No supervisor found.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_528","timestamp":1745347215765,"code":"var timeEntries: Array[String] | Null = null\nif (timeEntries == null) {\n  println(\"No time entries for this employee.\")\n}","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_530","timestamp":1745347215766,"code":"def fetchEmployeeStatus(name: String): String | Null = {\n  if (name == \"Eve\") \"Active\" else null\n}\n\nval status = fetchEmployeeStatus(\"John\")\nif (status == null) println(\"No status info available.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_532","timestamp":1745347215766,"code":"var lastError: String | Null = null\n\nif (lastError == null) {\n  println(\"No errors encountered today.\")\n}","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_534","timestamp":1745347215766,"code":"def getBreakDuration(employeeId: Int): Int | Null = {\n  // Simulating missing data for breaks\n  null\n}\n\nval breakDuration = getBreakDuration(13)\nif (breakDuration == null) println(\"No break data available.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_536","timestamp":1745347215766,"code":"class Attendance(var punchIn: String | Null, var punchOut: String | Null)\nval att = new Attendance(\"08:55\", null)\nif (att.punchOut == null) println(\"Employee hasn't punched out yet.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_538","timestamp":1745347215766,"code":"def externalClockIn(employeeId: Int): java.util.Date | Null = {\n  // Simulating a Java API call that can return null\n  null\n}\n\nval time = externalClockIn(10)\nif (time == null) println(\"Clock-in time not found from system.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_540","timestamp":1745347215766,"code":"val currentShift: String | Null = null\nif (currentShift == null) println(\"No shift assigned for employee.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_542","timestamp":1745347215766,"code":"var projectCode: String | Null = null\nif (projectCode == null) println(\"No project assigned for this time entry.\")","category":"uses_null_check","topicUsed":"Employee time tracking"}
{"id":"uses_null_check_524","timestamp":1745347240751,"code":"class WeatherAlert {\n  var message: String = null\n  def sendAlert(): Unit = {\n    if (message != null) {\n      println(s\"Alert: $message\")\n    }\n  }\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_526","timestamp":1745347240751,"code":"def getTemperature(city: String): java.lang.Double = {\n  if (city == \"\") null\n  else 21.5\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_528","timestamp":1745347240752,"code":"val severeWeatherType: String = null\nif (severeWeatherType == null) println(\"Weather type unknown.\")\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_530","timestamp":1745347240752,"code":"var userEmail: String = null\nuserEmail = \"user@example.com\"\nif (userEmail != null) println(s\"Sending email to $userEmail\")\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_532","timestamp":1745347240752,"code":"def fetchWeatherWarning(region: String): String = {\n  if (region == \"\") null else \"Heavy Rain Warning\"\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_534","timestamp":1745347240752,"code":"class Notification {\n  var priority: Int = 1\n  var alert: String = null\n  def display(): Unit = {\n    if (alert != null) println(alert)\n  }\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_536","timestamp":1745347240752,"code":"def getHumiditySensor(sensorId: String): String = null\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_538","timestamp":1745347240752,"code":"import java.util.Date\n\ndef getLastAlertTime(city: String): Date = {\n  if (city == \"Nowhere\") null\n  else new Date()\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_540","timestamp":1745347240752,"code":"val forecastMessage: String = null\nif (forecastMessage == null) {\n  println(\"No forecast available\")\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_542","timestamp":1745347240752,"code":"def alertDetails(alertCode: String): String = {\n  if (alertCode == \"123\") \"Flood Alert\"\n  else null\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_544","timestamp":1745347240752,"code":"var windSpeed: java.lang.Double = null\nwindSpeed = 5.0\nif (windSpeed != null) println(s\"Wind speed is $windSpeed km/h\")\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_546","timestamp":1745347240752,"code":"def getRegionAlert(regionId: Int): String = {\n  if (regionId < 0) null\n  else \"Storm Warning\"\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_548","timestamp":1745347240753,"code":"class CityAlerts(val city: String) {\n  var weatherAlert: String = null\n  def alertStatus(): Unit = {\n    if (weatherAlert != null) println(weatherAlert)\n  }\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_550","timestamp":1745347240753,"code":"def fetchRadarImage(station: String): Array[Byte] = {\n  if (station == \"offline\") null\n  else Array(12, 34, 56)\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_552","timestamp":1745347240753,"code":"var latestAlert: String = null\nlatestAlert = \"Tornado Watch\"\nif (latestAlert != null) println(s\"Current alert: $latestAlert\")\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_554","timestamp":1745347240753,"code":"def getUserAlertSubscription(userId: Int): String = {\n  if (userId < 0) null else \"active\"\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_556","timestamp":1745347240753,"code":"class AlertManager {\n  var scheduledAlert: String = null\n  def schedule(alert: String): Unit = {\n    scheduledAlert = alert\n  }\n  def checkAlert(): Unit = {\n    if (scheduledAlert != null) println(scheduledAlert)\n  }\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_558","timestamp":1745347240753,"code":"def findWeatherStation(code: String): String = {\n  // Simulate a Java library method that can return null\n  if (code == \"XYZ\") \"WeatherStation42\"\n  else null\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_560","timestamp":1745347240754,"code":"val precipitation: java.lang.Double = null\nif (precipitation == null) println(\"No precipitation data available.\")\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_562","timestamp":1745347240754,"code":"def getCurrentTemperature(sensorId: String): java.lang.Double = {\n  // Assume sensor can fail and return null as per legacy library\n  if (sensorId == \"bad\") null else 12.8\n}\n","category":"uses_null_check","topicUsed":"Weather alert notification service"}
{"id":"uses_null_check_544","timestamp":1745347264302,"code":"case class Payment(transactionId: String, amount: Double, location: String)\n\ndef findSuspiciousLocation(payment: Payment): String = {\n  if (payment.location == null) \"UNKNOWN\" else payment.location\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_546","timestamp":1745347264302,"code":"var flaggedUserId: String = null\n\ndef flagUser(userId: String): Unit = {\n  flaggedUserId = userId\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_548","timestamp":1745347264302,"code":"def getFraudScore(transaction: Payment): java.lang.Integer = {\n  if (transaction.amount > 10000) 90\n  else null\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_550","timestamp":1745347264302,"code":"import java.util.Date\n\nclass Transaction(val id: String, val timestamp: Date)\n\ndef getTransactionTime(tx: Transaction): Date = {\n  if (tx == null) null else tx.timestamp\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_552","timestamp":1745347264303,"code":"def isCardPresent(cardNumber: String): Boolean = {\n  if (cardNumber == null) false else true\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_554","timestamp":1745347264303,"code":"var lastError: String = null\n\ndef handleFraudAlert(alert: String | Null): Unit = {\n  if (alert == null) lastError = \"No alert provided\"\n  else lastError = alert\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_556","timestamp":1745347264303,"code":"def lookupCountry(ip: String): String = {\n  if (ip == null) null\n  else \"US\"\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_558","timestamp":1745347264303,"code":"class PaymentDetails(val payer: String, val payee: String)\n\nval details: PaymentDetails = null\n\nif (details == null) println(\"Missing payment details\")","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_560","timestamp":1745347264303,"code":"def fetchTransactionById(id: String): Payment = {\n  // Hypothetical database call which might return null\n  null\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_562","timestamp":1745347264303,"code":"def getRiskCategory(score: java.lang.Double): String = {\n  if (score == null) \"UNKNOWN\" else if (score > 80) \"HIGH\" else \"LOW\"\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_564","timestamp":1745347264303,"code":"var suspiciousTransactions: List[Payment] = null\n\nsuspiciousTransactions = List.empty\nif (suspiciousTransactions != null) println(\"No suspicious transactions yet\")","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_566","timestamp":1745347264303,"code":"def userDeviceInfo(userId: String): String = {\n  // Simulate Java API returning null if info missing\n  null\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_568","timestamp":1745347264303,"code":"def isHighValuePayment(payment: Payment): Boolean = {\n  if (payment == null) false else payment.amount > 10000\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_570","timestamp":1745347264303,"code":"var reviewNote: String = null\n\ndef addReview(note: String | Null): Unit = {\n  if (note == null) reviewNote = \"No note provided\"\n  else reviewNote = note\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_572","timestamp":1745347264304,"code":"class Reviewer(var name: String)\nvar reviewer: Reviewer = null\n\nif (reviewer == null) reviewer = new Reviewer(\"AutoBot\")","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_574","timestamp":1745347264304,"code":"def getPreviousFraudFlag(userId: String): java.lang.Boolean = {\n  // Interacting with a Java service\n  null\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_576","timestamp":1745347264304,"code":"def parseTransaction(json: String): Payment = {\n  // Parsing failed: return null\n  null\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_578","timestamp":1745347264304,"code":"def suspiciousMerchant(merchantId: String): java.lang.Boolean = {\n  if (merchantId == null) null else java.lang.Boolean.FALSE\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_580","timestamp":1745347264304,"code":"var manualReviewUser: String = null\nif (manualReviewUser == null) manualReviewUser = \"analyst_01\"","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_582","timestamp":1745347264304,"code":"def riskLevel(payment: Payment | Null): String = {\n  if (payment == null) \"ERROR\" else if (payment.amount > 10000) \"High\" else \"Low\"\n}","category":"uses_null_check","topicUsed":"Fraud detection in payments"}
{"id":"uses_null_check_564","timestamp":1745347277795,"code":"import java.awt.Image\n\n// Snippet 1: Assigning null to a loaded DICOM image\nvar dicomImage: Image = null\n// Later: load image\n// dicomImage = loadImageFromFile(filePath)","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_566","timestamp":1745347277795,"code":"// Snippet 2: Null check on image header\nval imageHeader: String = getHeaderInfo()\nif (imageHeader == null) {\n  println(\"Header not found!\")\n} else {\n  println(s\"Header: $imageHeader\")\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_568","timestamp":1745347277795,"code":"// Snippet 3: Returning null from a function if image not loaded\ndef getPixelData(id: Int): Array[Byte] = {\n  if (id < 0) null else Array.fill(10)(0.toByte)\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_570","timestamp":1745347277795,"code":"// Snippet 4: Assign null to optional DICOM series info\nvar seriesInfo: Map[String, String] = null\n// Load seriesInfo from database (possibly missing)","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_572","timestamp":1745347277795,"code":"import java.awt.image.BufferedImage\n\n// Snippet 5: Null dereference potential\nval overlay: BufferedImage = loadOverlayLayer()\nif (overlay != null) {\n  println(s\"Overlay Dimensions: ${overlay.getHeight}x${overlay.getWidth}\")\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_574","timestamp":1745347277795,"code":"// Snippet 6: Null assignment for selected annotation\nvar selectedAnnotation: Annotation = null\n// selectedAnnotation = findAnnotation(x, y)","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_576","timestamp":1745347277795,"code":"// Snippet 7: Return null for missing patient info\ndef getPatientName(id: String): String = {\n  if (database.contains(id)) database(id) else null\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_578","timestamp":1745347277796,"code":"// Snippet 8: Null check before rendering image\nval currentSlice: BufferedImage = getImageSlice(index)\nif (currentSlice != null) {\n  render(currentSlice)\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_580","timestamp":1745347277796,"code":"// Snippet 9: Null assignment and check on Study metadata\nvar studyMeta: StudyMetadata = null\nif (studyMeta == null) {\n  println(\"No study metadata found.\")\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_582","timestamp":1745347277796,"code":"// Snippet 10: Java library returning null\nval zoomLevel: java.lang.Integer = imagingJavaLib.getZoom(\n  viewerId)\nif (zoomLevel != null) setZoom(zoomLevel)","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_584","timestamp":1745347277796,"code":"// Snippet 11: Assign null when view is reset\nvar currentTool: ViewerTool = predefinedTool\n// Reset tool when resetting view\ncurrentTool = null","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_586","timestamp":1745347277796,"code":"// Snippet 12: Null in image loader failure path\ndef loadSegmentationMask(path: String): Array[Array[Int]] = {\n  if (!fileExists(path)) null else parseMaskFile(path)\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_588","timestamp":1745347277796,"code":"// Snippet 13: Null check when displaying patient photo\nval patientPhoto: Image = fetchPatientPhoto(pid)\nif (patientPhoto == null) println(\"Photo not available.\")","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_590","timestamp":1745347277796,"code":"// Snippet 14: Null assignment in 3D model loading\nvar volumeModel: Model3D = null\nvolumeModel = load3DModel(volumePath)","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_592","timestamp":1745347277796,"code":"// Snippet 15: Return null for missing series\ndef getSeriesImages(seriesId: String): List[BufferedImage] |\n  Null = {\n  if (seriesInCache(seriesId)) cachedSeries(seriesId)\n  else null\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_594","timestamp":1745347277796,"code":"// Snippet 16: Null check before exporting results\nval exportData: ExportResult = generateExportResult()\nif (exportData != null) saveExport(exportData)","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_596","timestamp":1745347277796,"code":"// Snippet 17: Null assignment and check on user-defined windowing\nvar customWindowing: WindowingParams = null\nif (customWindowing != null) applyWindowing(customWindowing)","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_598","timestamp":1745347277797,"code":"// Snippet 18: Null returned if ROI not found\ndef getROIByName(name: String): ROI = {\n  userROIs.find(_.name == name).getOrElse(null)\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_600","timestamp":1745347277797,"code":"// Snippet 19: Null check on reference image\nval referenceImage: BufferedImage = database.getReferenceImage(studyId)\nif (referenceImage == null) {\n  println(\"No reference image available.\")\n}","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_602","timestamp":1745347277797,"code":"// Snippet 20: Null assignment for optional plugin in viewer\nvar loadedPlugin: ViewerPlugin = null\n// loadedPlugin = pluginManager.load(pluginName)","category":"uses_null_check","topicUsed":"Medical imaging data viewer"}
{"id":"uses_null_check_584","timestamp":1745347295639,"code":"import wix.payments.PaymentLink\n\ndef findPaymentLinkById(id: String): PaymentLink = {\n  val result: PaymentLink = db.getPaymentLink(id)\n  if (result == null) println(s\"Payment link $id not found\")\n  result\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_586","timestamp":1745347295639,"code":"var currentPaymentLink: PaymentLink = null\n\ndef setPaymentLink(link: PaymentLink | Null): Unit = {\n  if (link != null) {\n    currentPaymentLink = link\n  }\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_588","timestamp":1745347295639,"code":"def cancelPaymentLinkIfNotNull(link: PaymentLink | Null): Boolean = {\n  if (link != null) {\n    link.cancel()\n    true\n  } else false\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_590","timestamp":1745347295639,"code":"class PaymentLinkService(db: WixPaymentLinkDb) {\n  def fetchLinkStatus(id: String): String | Null = {\n    val link = db.lookup(id)\n    if (link == null) null\n    else link.status\n  }\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_592","timestamp":1745347295639,"code":"def getPaymentLinkUrl(link: PaymentLink | Null): String =\n  if (link != null) link.url else null","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_594","timestamp":1745347295639,"code":"def updateLinkDescription(link: PaymentLink): Unit = {\n  if (link == null) return\n  link.description = \"Updated by backend\"\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_596","timestamp":1745347295639,"code":"def safeGetLinkAmount(link: PaymentLink | Null): Double = {\n  if (link != null) link.amount\n  else 0.0\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_598","timestamp":1745347295640,"code":"var lastFetchedLink: PaymentLink = null\n\nlastFetchedLink = fetchPaymentLink(\"abc123\")\nif (lastFetchedLink != null) {\n  println(lastFetchedLink.id)\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_600","timestamp":1745347295640,"code":"def getPaymentLinkOrNull(id: String): PaymentLink | Null = {\n  if (id == \"\") null else PaymentLink(id, 50.0)\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_602","timestamp":1745347295640,"code":"def removePaymentLinkIfExists(id: String): Boolean = {\n  val link = store.get(id)\n  if (link != null) {\n    store.remove(id)\n    true\n  } else false\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_604","timestamp":1745347295640,"code":"def printLinkCreateTime(link: PaymentLink | Null): Unit = {\n  if (link == null) println(\"No link provided\")\n  else println(link.createTime)\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_606","timestamp":1745347295640,"code":"def createLinkOrNull(amount: Double): PaymentLink | Null = {\n  if (amount <= 0) null\n  else PaymentLink(java.util.UUID.randomUUID().toString, amount)\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_608","timestamp":1745347295640,"code":"def getJavaPaymentLinkOrNull(id: String): JavaPaymentLink = {\n  val link = JavaPaymentLinkApi.getPaymentLink(id)\n  if (link == null) null else link\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_610","timestamp":1745347295640,"code":"val defaultLink: PaymentLink = null\nif (defaultLink == null) {\n  println(\"No default payment link set.\")\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_612","timestamp":1745347295640,"code":"class BackendLinkManager {\n  var cachedLink: PaymentLink = null\n  def cacheLink(id: String): Unit = {\n    val link = db.getPaymentLink(id)\n    if (link != null) cachedLink = link\n  }\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_614","timestamp":1745347295640,"code":"def linkExpirationMillis(link: PaymentLink | Null): Long = {\n  if (link == null) 0L\n  else link.expiration\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_616","timestamp":1745347295640,"code":"def isLinkActive(link: PaymentLink | Null): Boolean = {\n  if (link != null && link.status == \"active\") true else false\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_618","timestamp":1745347295641,"code":"def getReceiverName(link: PaymentLink | Null): String =\n  if (link == null) null else link.receiverName","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_620","timestamp":1745347295641,"code":"def lookupOrNull(keys: List[String]): PaymentLink | Null = {\n  for (id <- keys) {\n    val link = db.getPaymentLink(id)\n    if (link != null) return link\n  }\n  null\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_622","timestamp":1745347295641,"code":"def setNullForDeleted(link: PaymentLink): PaymentLink = {\n  if (link.deleted) null else link\n}","category":"uses_null_check","topicUsed":"Wix backend service for managing Payment Links"}
{"id":"uses_null_check_604","timestamp":1745347303805,"code":"class UserProfile(val userId: String, var userLanguage: String)\n\nval profile: UserProfile = null // No profile loaded yet","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_606","timestamp":1745347303805,"code":"def findSupportedLanguage(lang: String): String = {\n  if (lang == \"en\" || lang == \"es\" || lang == \"fr\") lang\n  else null\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_608","timestamp":1745347303805,"code":"var lastTranslation: String = null\n// Set after successful translation later","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_610","timestamp":1745347303805,"code":"def getApiToken(): String = {\n  // Hypothetically fetch API token\n  null // API token unavailable\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_612","timestamp":1745347303805,"code":"val chosenModel: String = null\nif (chosenModel == null) println(\"No model selected for translation.\")","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_614","timestamp":1745347303806,"code":"def getActiveSession(userId: String): ChatSession = {\n  // Dummy case, assume could not find session\n  null\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_616","timestamp":1745347303806,"code":"class TranslationRequest(val input: String, val targetLang: String)\nval currentRequest: TranslationRequest = null","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_618","timestamp":1745347303806,"code":"def userPreferredLanguage(userId: String): String = {\n  // Simulates a lookup that could fail\n  null\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_620","timestamp":1745347303806,"code":"var translationResult: String = chatBot.translate(msg, lang)\nif (translationResult == null) println(\"Translation failed.\")","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_622","timestamp":1745347303806,"code":"// Uses a Java library which can return null\nval translatedText: String = javaTranslator.translateOrNull(sentence, \"ja\")\nif (translatedText != null) println(translatedText)","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_624","timestamp":1745347303806,"code":"def getBotDisplayName(): String = {\n  null // Not set up yet\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_626","timestamp":1745347303806,"code":"val fallbackPhrase: String = null\nif (fallbackPhrase == null) println(\"No fallback phrase found.\")","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_628","timestamp":1745347303807,"code":"class Message(val author: String, val text: String)\nval lastUserMessage: Message = null","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_630","timestamp":1745347303807,"code":"def findTranslationEngine(engineName: String): TranslationEngine = {\n  // Lookup might fail\n  null\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_632","timestamp":1745347303807,"code":"var context: ChatContext = chatService.currentContext()\nif (context == null) println(\"No chat context found.\")","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_634","timestamp":1745347303807,"code":"def getLanguageDirection(src: String, tgt: String): String = {\n  if (src == \"en\" && tgt == \"fr\") \"en-fr\"\n  else null\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_636","timestamp":1745347303807,"code":"class Response(val message: String)\ndef getBotResponse(prompt: String): Response = {\n  null\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_638","timestamp":1745347303807,"code":"val activeLocale: String = userSettings.getLocale()\nif (activeLocale == null) println(\"Locale not set.\")","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_640","timestamp":1745347303808,"code":"def findUserInput(): String = {\n  null // Simulates reading from empty chat\n}","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_642","timestamp":1745347303808,"code":"var detectedLang: String = null\n// Will be set after language detection","category":"uses_null_check","topicUsed":"Language translation chat bot"}
{"id":"uses_null_check_624","timestamp":1745347316280,"code":"// 1. Null assignment to a meter reading value\nvar currentReading: java.lang.Double = null\n// Later in code: fetch from sensor\ncurrentReading = EnergySensor.getLatestReading()\nif (currentReading == null) println(\"No reading available.\")\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_626","timestamp":1745347316280,"code":"// 2. Returning null from a function that queries consumption\n\ndef fetchDailyUsage(householdId: String): java.lang.Double = {\n  // Suppose legacyDB.getDaily returns null if missing\n  val usage = legacyDB.getDaily(householdId)\n  if (usage == null) println(s\"No usage for $householdId on this day.\")\n  usage\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_628","timestamp":1745347316281,"code":"// 3. Null check before aggregation\n\ndef aggregateConsumption(value1: java.lang.Double, value2: java.lang.Double): java.lang.Double = {\n  if (value1 == null || value2 == null) return null\n  value1 + value2\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_630","timestamp":1745347316281,"code":"// 4. Null assignment as missing dashboard value\nvar costEstimate: java.lang.Double = null\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_632","timestamp":1745347316281,"code":"// 5. Null check when rendering dashboard widget\nval peakHour: String = EnergyData.findPeakHour()\nif (peakHour != null) println(s\"Peak hour is $peakHour\")\nelse println(\"Peak hour data not found.\")\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_634","timestamp":1745347316281,"code":"// 6. Java interop: get device status (may be null)\nval deviceStatus = DeviceManager.getDeviceStatus(\"heater-1\")\nif (deviceStatus == null) {\n  println(\"Device status unavailable.\")\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_636","timestamp":1745347316281,"code":"// 7. Returning null from data lookup\nclass Meter(val id: String, val location: String)\ndef findMeter(id: String): Meter = {\n  val result = meterRegistry.get(id)\n  if (result == null) println(s\"Meter $id not found.\")\n  result\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_638","timestamp":1745347316281,"code":"// 8. Null check before performing analytics\nval readings = AnalyticsLib.fetchReadings(\"today\")\nif (readings != null) {\n  computeAverage(readings)\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_640","timestamp":1745347316281,"code":"// 9. Assign null to indicate missing temperature\nvar outsideTemp: java.lang.Double = null\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_642","timestamp":1745347316281,"code":"// 10. Null check before using update timestamp\nval lastUpdate = dashboard.getLastUpdateTime()\nif (lastUpdate != null) {\n  println(s\"Data last updated at $lastUpdate\")\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_644","timestamp":1745347316281,"code":"// 11. Return null on failed API response\ndef getPowerFactor(zone: String): java.lang.Double = {\n  val factor = PowerAPI.fetch(zone)\n  if (factor == null) null\n  else factor\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_646","timestamp":1745347316282,"code":"// 12. Assign null to variable tracking previous consumption\nvar previousDayConsumption: java.lang.Double = null\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_648","timestamp":1745347316282,"code":"// 13. Null check for missing tariff data\nval tariff = tariffDatabase.lookup(\"April\")\nif (tariff == null) {\n  println(\"No tariff data for April.\")\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_650","timestamp":1745347316282,"code":"// 14. Null assignment in a class representing a report\nclass ConsumptionReport(var notes: String = null)\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_652","timestamp":1745347316282,"code":"// 15. Null check before displaying user energy goals\nval userGoal = userProfile.getEnergyGoal()\nif (userGoal != null) println(s\"Your goal: $userGoal kWh\")\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_654","timestamp":1745347316282,"code":"// 16. Return null if combined consumption can't be determined\ndef getCombinedConsumption(a: java.lang.Double, b: java.lang.Double): java.lang.Double = {\n  if (a == null || b == null) null else a + b\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_656","timestamp":1745347316282,"code":"// 17. Null check before charting monthly trend\nval series = chartData.loadSeries(\"monthlyTrend\")\nif (series != null) plotTrend(series)\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_658","timestamp":1745347316282,"code":"// 18. Assign null for optional discount info\nvar energyDiscount: java.lang.Double = null\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_660","timestamp":1745347316282,"code":"// 19. Return null if sensor string is not mapped to ID\ndef getSensorId(sensorName: String): String = {\n  val id = sensorMap.get(sensorName)\n  if (id == null) null else id\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_662","timestamp":1745347316282,"code":"// 20. Null check on optional control command response\nval controlResponse = DeviceController.sendCommand(\"turnOff\", \"AC-2\")\nif (controlResponse == null) {\n  println(\"Control command failed: No response.\")\n}\n","category":"uses_null_check","topicUsed":"Energy consumption dashboard"}
{"id":"uses_null_check_644","timestamp":1745347325831,"code":"class VoteRecord(val id: String, var candidate: String)\n\nvar currentVote: VoteRecord = null\nif (currentVote == null) println(\"No vote recorded.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_646","timestamp":1745347325831,"code":"def findBallotById(id: String): VoteRecord = {\n  // Simulating not found\n  null\n}\n\nval ballot = findBallotById(\"1234\")\nif (ballot != null) println(ballot.candidate)","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_648","timestamp":1745347325832,"code":"var tallySheet: Map[String, Int] = null\n\nif (tallySheet == null)\n  println(\"Tally sheet not initialized.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_650","timestamp":1745347325832,"code":"def getVoterDistrict(voterId: String): String = {\n  // Fakes a missing district for demonstration\n  null\n}\n\nval district = getVoterDistrict(\"v001\")\nif (district == null)\n  println(\"District not found.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_652","timestamp":1745347325832,"code":"var electionResult: String = null\nif (electionResult == null) {\n  electionResult = \"Undecided\"\n}\nprintln(electionResult)","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_654","timestamp":1745347325832,"code":"class ElectronicBallot(val id: String, val data: String)\n\ndef fetchBallot(id: String): ElectronicBallot = null\n\nval ballot = fetchBallot(\"0042\")\nif (ballot == null) println(\"Ballot not found.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_656","timestamp":1745347325832,"code":"var invalidatedVote: VoteRecord = null\nif (invalidatedVote == null) {\n  println(\"No invalidated votes.\")\n}","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_658","timestamp":1745347325832,"code":"def findCandidate(name: String): String = if (name == \"\") null else name\n\nval candidate = findCandidate(\"\")\nif (candidate == null) println(\"Candidate not specified.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_660","timestamp":1745347325832,"code":"class TallyingMachine(var status: String)\n\nval machine: TallyingMachine = null\nif (machine == null) println(\"Machine offline.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_662","timestamp":1745347325833,"code":"var recountNeeded: java.lang.Boolean = null\nif (recountNeeded == null || !recountNeeded) {\n  println(\"No recount needed.\")\n}","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_664","timestamp":1745347325833,"code":"def getProvisionalBallot(voterId: String): VoteRecord = {\n  // Returns null to indicate no provisional ballot exists\n  null\n}\nval provisional = getProvisionalBallot(\"v002\")\nif (provisional == null) println(\"No provisional ballot for voter v002.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_666","timestamp":1745347325833,"code":"var winnerCandidate: String = null\nwinnerCandidate = \"Jane Doe\"\nif (winnerCandidate != null) println(s\"Winner: $winnerCandidate\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_668","timestamp":1745347325833,"code":"class AuditLog(var entries: List[String])\nvar log: AuditLog = null\nif (log == null) log = new AuditLog(List(\"Log started.\"))","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_670","timestamp":1745347325833,"code":"def getPrecinctTally(precinct: Int): Map[String, Int] = {\n  // Simulate no record for precinct\n  null\n}\nval precinctTally = getPrecinctTally(8)\nif (precinctTally == null) println(\"No tally for precinct 8.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_672","timestamp":1745347325833,"code":"var scannedVotes: Array[VoteRecord] = null\nif (scannedVotes == null)\n  scannedVotes = Array.empty\nprintln(s\"Scanned votes: ${scannedVotes.length}\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_674","timestamp":1745347325833,"code":"def checkDiscrepancy(reportId: Int): String = null\nval discrepancy = checkDiscrepancy(5)\nif (discrepancy == null) println(\"No discrepancy found.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_676","timestamp":1745347325833,"code":"class ElectionObserver(val name: String)\nvar observer: ElectionObserver = null\nobserver = new ElectionObserver(\"Alice\")\nif (observer != null) println(s\"Observer: ${observer.name}\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_678","timestamp":1745347325834,"code":"def getLatestCount(): java.lang.Integer = null\nval count = getLatestCount()\nif (count == null) println(\"No latest count available.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_680","timestamp":1745347325834,"code":"var spoiledBallot: VoteRecord = null\nspoiledBallot = new VoteRecord(\"5678\", \"Smith\")\nif (spoiledBallot != null) println(s\"Spoiled ballot for: ${spoiledBallot.candidate}\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_682","timestamp":1745347325834,"code":"// Simulating a Java interop returning null for missing voter info\nclass JavaVoterDB {\n  def getVoterInfo(id: String): String = null\n}\nval db = new JavaVoterDB\nval info = db.getVoterInfo(\"304\")\nif (info == null) println(\"Voter info not found.\")","category":"uses_null_check","topicUsed":"Electronic voting tallying"}
{"id":"uses_null_check_664","timestamp":1745347344066,"code":"class Book(val title: String, val author: String)\ndef findBookByTitle(catalog: List[Book], searchTitle: String): Book =\n  for b <- catalog do\n    if b.title == searchTitle then return b\n  null\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_666","timestamp":1745347344066,"code":"var currentUserSession: String = null\ndef loginUser(userId: String): Unit =\n  currentUserSession = s\"session-$userId\"\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_668","timestamp":1745347344066,"code":"def getAuthorLastName(author: String): String =\n  if (author == null) \"Unknown\"\n  else author.split(\" \").last\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_670","timestamp":1745347344066,"code":"class DigitalLibrary {\n  var lastSearchTerm: String = null\n  def search(term: String): Unit =\n    lastSearchTerm = term\n}\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_672","timestamp":1745347344066,"code":"def getCatalogEntry(isbn: String): java.util.Map[String, Object] = {\n  val db: java.util.Map[String, java.util.Map[String, Object]] = java.util.HashMap()\n  db.get(isbn)\n}\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_674","timestamp":1745347344067,"code":"def safeGetEntry(entries: Array[String], idx: Int): String =\n  if idx >= entries.length || entries(idx) == null then\n    \"Unavailable\"\n  else\n    entries(idx)\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_676","timestamp":1745347344067,"code":"var lastRetrievedBook: Book = null\ndef retrieveBookById(id: Int, books: List[Book]): Book =\n  for b <- books do\n    if b.hashCode == id then lastRetrievedBook = b\n  lastRetrievedBook\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_678","timestamp":1745347344067,"code":"def getSearchResultCount(results: Array[Book]): Int =\n  if results == null then 0 else results.length\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_680","timestamp":1745347344067,"code":"def printBookInfo(book: Book): Unit =\n  if book == null then\n    println(\"No book found!\")\n  else\n    println(s\"Title: ${book.title}, Author: ${book.author}\")\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_682","timestamp":1745347344068,"code":"var searchFilter: String = null\ndef setSearchFilter(filter: String): Unit =\n  searchFilter = filter\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_684","timestamp":1745347344068,"code":"def getLibrarySection(sectionMap: java.util.Map[String, String], section: String): String =\n  val result = sectionMap.get(section)\n  if result == null then \"Section not found\" else result\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_686","timestamp":1745347344068,"code":"def fetchDigitalCopy(bookId: String): java.io.InputStream =\n  if bookId == null then null\n  else new java.io.ByteArrayInputStream(Array.emptyByteArray)\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_688","timestamp":1745347344068,"code":"def getUserPreferredLanguage(prefs: Map[String, String]): String =\n  val lang = prefs.getOrElse(\"language\", null)\n  if lang == null then \"en\" else lang\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_690","timestamp":1745347344068,"code":"class BookRecord(val id: String, val title: String, val format: String)\ndef getBookFormat(record: BookRecord): String =\n  if record == null then null else record.format\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_692","timestamp":1745347344069,"code":"def showTopResult(results: List[Book]): Unit =\n  if results == null || results.isEmpty then println(\"No search results.\")\n  else println(s\"Top result: ${results.head.title}\")\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_694","timestamp":1745347344069,"code":"var lastError: String = null\ndef searchCatalog(term: String): List[Book] =\n  if term == \"\" then\n    lastError = \"Empty search term\"\n    null\n  else\n    List.empty\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_696","timestamp":1745347344069,"code":"class User(var favoriteCategory: String)\ndef clearFavorite(user: User): Unit =\n  if user != null then\n    user.favoriteCategory = null\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_698","timestamp":1745347344069,"code":"def getPublicationYear(meta: java.util.Map[String, Object], key: String): Int =\n  val yearObj = meta.get(key)\n  if (yearObj == null) 0 else yearObj.toString.toInt\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_700","timestamp":1745347344069,"code":"def getFirstMatch(queries: Seq[String], catalog: List[Book]): Book =\n  for query <- queries do\n    val matchBook = findBookByTitle(catalog, query)\n    if matchBook != null then return matchBook\n  null\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_702","timestamp":1745347344069,"code":"def getDigitalResourcePath(metadata: java.util.Map[String, Object]): String =\n  val path = metadata.get(\"resourcePath\")\n  if path == null then \"/not-found\" else path.toString\n","category":"uses_null_check","topicUsed":"Digital library catalog search"}
{"id":"uses_null_check_684","timestamp":1745347358495,"code":"var qrData: String = null // expected to scan a QR code\nif (qrData == null) then\n  println(\"No QR data found!\")\nelse\n  println(s\"QR data: $qrData\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_686","timestamp":1745347358495,"code":"def findTicketByQRCode(qrCode: String): Ticket =\n  if qrCode == null then null\n  else Ticket(qrCode)\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_688","timestamp":1745347358496,"code":"val validator: QRValidator = null // could be injected\nif validator != null then\n  validator.validate(\"SAMPLE_CODE\")\nelse\n  println(\"Validator unavailable.\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_690","timestamp":1745347358496,"code":"val ticketId: String = getQrCode()\nif (ticketId eq null) {\n  println(\"QR code missing, cannot validate\")\n}\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_692","timestamp":1745347358496,"code":"class EventTicket(var code: String, var holder: String)\nvar ticket: EventTicket = null\nticket = getTicketFromDb(\"QRCODE123\")\nif (ticket == null) println(\"Ticket not found.\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_694","timestamp":1745347358496,"code":"def parseEventFromQR(qr: String): Event =\n  val event = JavaEventParser.parse(qr) // imagine this might return null\n  if event == null then new Event(\"Invalid\") else event\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_696","timestamp":1745347358496,"code":"def getEntryTime(qrCode: String): String =\n  val ticket = db.lookupTicket(qrCode)\n  if ticket == null then null else ticket.entryTime\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_698","timestamp":1745347358496,"code":"def isQrValid(qr: String): Boolean =\n  if qr == null then false\n  else qr.startsWith(\"EVT-\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_700","timestamp":1745347358496,"code":"var scannedCode: String = null\nscanQr() match\n  case code if code != null => scannedCode = code\n  case _ => println(\"Scan failed.\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_702","timestamp":1745347358497,"code":"def logTicketStatus(ticket: Ticket): Unit =\n  if ticket == null then println(\"No ticket to log.\")\n  else println(s\"Ticket code: ${ticket.code}\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_704","timestamp":1745347358497,"code":"val javaResult: String = JavaQRUtil.verifyQr(\"SOME_QR\") // may be null\nif (javaResult != null) println(\"Verified!\")\nelse println(\"Verification failed!\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_706","timestamp":1745347358497,"code":"class QRInfo(val id: String, val valid: Boolean)\ndef fetchQRInfo(qr: String): QRInfo =\n  if qr == null then null\n  else new QRInfo(qr, qr.length > 5)\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_708","timestamp":1745347358497,"code":"var validatorInstance: QRCodeValidator = getValidatorOrNull()\nif validatorInstance == null then\n  println(\"No QRCode validator present.\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_710","timestamp":1745347358497,"code":"def printAttendee(qr: String): Unit =\n  val attendee = lookupAttendee(qr)\n  if attendee == null then println(\"Unknown attendee\")\n  else println(attendee.name)\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_712","timestamp":1745347358497,"code":"def getSeatNumber(qr: String): String =\n  val seat = db.querySeat(qr)\n  if seat == null then null else seat.seatNumber\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_714","timestamp":1745347358497,"code":"var lastQR: String = null\nupdateLastQR(\"NEW_QR_CODE\")\nif lastQR != null then println(s\"Last QR: $lastQR\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_716","timestamp":1745347358497,"code":"def invalidateTicket(qrCode: String): Boolean =\n  val ticket = findTicket(qrCode)\n  if ticket == null then false\n  else { ticket.active = false; true }\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_718","timestamp":1745347358498,"code":"def getQRCodeImage(description: String): Array[Byte] =\n  val result = javaLib.generateQR(description) // might be null\n  if (result == null) then null else result\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_720","timestamp":1745347358498,"code":"val qrString = javaQRCodeFetcher.fetch() // Java API, possibly null\nif qrString == null then println(\"Could not fetch QR string.\")\nelse println(s\"QR fetched: $qrString\")\n","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_722","timestamp":1745347358498,"code":"def validateQrPayload(payload: String): Boolean = {\n  if (payload == null) return false\n  payload.nonEmpty && payload.contains(\"EVENT\")\n}","category":"uses_null_check","topicUsed":"Event ticket QR validation"}
{"id":"uses_null_check_704","timestamp":1745347373517,"code":"import scala.util.Random\n\nclass Waypoint(val x: Double, val y: Double)\n\nvar nextWaypoint: Waypoint = null\nif (Random.nextBoolean()) {\n  nextWaypoint = new Waypoint(100.0, 50.0)\n}\nif (nextWaypoint != null) println(s\"Next waypoint at (${nextWaypoint.x}, ${nextWaypoint.y})\")\nelse println(\"No waypoint assigned.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_706","timestamp":1745347373517,"code":"def findNearestChargingStation(droneLat: Double, droneLng: Double): String = {\n  // Hypothetical function that might not find a station\n  if (droneLat > 0 && droneLng > 0) \"StationA\" else null\n}\n\nval station = findNearestChargingStation(0.0, 0.0)\nif (station == null) println(\"No charging station found.\")\nelse println(s\"Nearest station: $station\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_708","timestamp":1745347373517,"code":"class Route(val origin: String, val destination: String)\nvar currentRoute: Route = new Route(\"Warehouse1\", \"LocationA\")\n// Simulate loss of route info\ndef invalidateRoute(): Unit = {\n  currentRoute = null\n}\ninvalidateRoute()\nif (currentRoute == null) println(\"Current route information missing.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_710","timestamp":1745347373517,"code":"def getWeatherForecast(location: String): String = {\n  if (location.isEmpty) null else \"Clear skies\"\n}\n\nval forecast = getWeatherForecast(\"\")\nif (forecast == null) println(\"No forecast available.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_712","timestamp":1745347373517,"code":"// Simulating Java library returning null\nclass JavaWindDataApi {\n  def getWindSpeed(zone: String): java.lang.Double = {\n    if (zone.contains(\"blocked\")) null else 8.5\n  }\n}\n\nval api = new JavaWindDataApi()\nval windSpeed = api.getWindSpeed(\"blocked-area\")\nif (windSpeed == null) println(\"No wind speed data.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_714","timestamp":1745347373518,"code":"var optimalAltitude: java.lang.Double = null\n// Assign altitude if calculated\nif (math.random() > 0.3) optimalAltitude = 120.0\nif (optimalAltitude == null) println(\"Altitude not set.\") else println(s\"Fly at $optimalAltitude m\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_716","timestamp":1745347373518,"code":"def getNextDeliveryPoint(path: List[String]): String = {\n  if (path.isEmpty) null else path.head\n}\nval deliveryPoint = getNextDeliveryPoint(List())\nif (deliveryPoint == null) println(\"No delivery points remaining.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_718","timestamp":1745347373518,"code":"class Battery(var remaining: Int)\nvar backupBattery: Battery = new Battery(80)\n// Simulating battery swap failure\nbackupBattery = null\nif (backupBattery == null) println(\"Backup battery missing!\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_720","timestamp":1745347373518,"code":"def emergencyReturnRoute(route: Array[String]): Array[String] = {\n  if (route.length < 2) null else route.reverse\n}\nval route = emergencyReturnRoute(Array())\nif (route == null) println(\"No route for emergency return.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_722","timestamp":1745347373518,"code":"class Obstacle(val x: Double, val y: Double, val radius: Double)\nvar detectedObstacle: Obstacle = null\nif (math.random() > 0.5) detectedObstacle = new Obstacle(10, 10, 1)\nif (detectedObstacle != null)\n  println(s\"Detected obstacle at (${detectedObstacle.x}, ${detectedObstacle.y})\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_724","timestamp":1745347373519,"code":"def requestFlightClearance(zone: String): java.lang.Boolean = {\n  if (zone == \"restricted\") null else true\n}\nval clearance = requestFlightClearance(\"restricted\")\nif (clearance == null) println(\"Clearance information unavailable.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_726","timestamp":1745347373519,"code":"val deliveryEta: java.lang.Long = null\n// Later: calculated if navigation successful\n// If not, stays null\nif (deliveryEta == null) println(\"No ETA for delivery.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_728","timestamp":1745347373519,"code":"def getPackageWeight(packageId: String): java.lang.Double = {\n  if (packageId == \"unknown\") null else 2.3\n}\nval pkgWeight = getPackageWeight(\"unknown\")\nif (pkgWeight == null) println(\"Missing weight data for package.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_730","timestamp":1745347373519,"code":"var alternativeRoutes: List[String] = null\nif (math.random() > 0.8)\n  alternativeRoutes = List(\"RouteA\", \"RouteB\")\nif (alternativeRoutes == null) println(\"No alternative routes.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_732","timestamp":1745347373519,"code":"def assignDroneToPath(droneId: String, path: List[String]): String = {\n  if (path.isEmpty) null else droneId\n}\nval assigned = assignDroneToPath(\"Drone007\", Nil)\nif (assigned == null) println(\"Drone not assigned to any path.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_734","timestamp":1745347373519,"code":"class WindMap(url: String)\nvar windMap: WindMap = null\nif (math.random() > 0.9) windMap = new WindMap(\"ws://maps/wind\")\nif (windMap == null) println(\"No wind map loaded.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_736","timestamp":1745347373519,"code":"def getAvoidanceInstructions(obstacle: Obstacle): String = {\n  if (obstacle == null) null else s\"Avoid at (${obstacle.x}, ${obstacle.y})\"\n}\nval instruction = getAvoidanceInstructions(null)\nif (instruction == null) println(\"No avoidance needed.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_738","timestamp":1745347373520,"code":"var nextDropoffLocation: String = null\nif (math.random() > 0.7) nextDropoffLocation = \"Customer42\"\nif (nextDropoffLocation == null) println(\"No dropoff scheduled.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_740","timestamp":1745347373520,"code":"def searchOptimalPath(start: String, end: String): List[String] = {\n  if (start == end) null else List(start, \"P1\", end)\n}\nval path = searchOptimalPath(\"A\", \"A\")\nif (path == null) println(\"No optimal path could be found.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_742","timestamp":1745347373520,"code":"class FlightPermit(val id: String)\ndef retrievePermit(droneId: String): FlightPermit = {\n  if (droneId.isEmpty) null else new FlightPermit(\"permit42\")\n}\nval permit = retrievePermit(\"\")\nif (permit == null) println(\"No flight permit retrieved.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_744","timestamp":1745347373520,"code":"var lastCompletedWaypoint: Waypoint = null\n// After completing waypoint\nlastCompletedWaypoint = new Waypoint(44.0, 88.0)\nif (lastCompletedWaypoint == null) println(\"No waypoint completed yet.\")\n","category":"uses_null_check","topicUsed":"Drone delivery path optimization"}
{"id":"uses_null_check_725","timestamp":1745347382239,"code":"// 1. Assigning null to a claimedEmail variable\nvar claimedEmail: String = null\nclaimedEmail = request.getClaimedEmail()\nif (claimedEmail == null) println(\"Email is missing!\")","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_727","timestamp":1745347382239,"code":"// 2. Returning null when policyId not found\ndef findPolicyId(userId: String): String = {\n  val dbResult = Database.lookupPolicy(userId)\n  if (dbResult == null) return null\n  dbResult.policyId\n}","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_729","timestamp":1745347382239,"code":"// 3. Null check on supportingDocument\nval supportingDocument: Document = ClaimService.getDocument(claimId)\nif (supportingDocument != null) {\n  println(\"Document is attached\")\n}","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_731","timestamp":1745347382240,"code":"// 4. Assigning null to a variable for adjuster\nvar adjuster: Adjuster = null\nadjuster = Portal.getAssignedAdjuster(claimId)\nif (adjuster == null) println(\"No adjuster assigned\")","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_733","timestamp":1745347382240,"code":"// 5. Returning null when claimant address is not in the system\ndef getClaimantAddress(claimantId: String): Address = {\n  if (!ClaimDB.hasAddress(claimantId)) null\n  else ClaimDB.fetchAddress(claimantId)\n}","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_735","timestamp":1745347382240,"code":"// 6. Passing null to Java API that expects nullable notes\nval notes: String = if (hasNotes) claim.notes else null\nJavaClaimAPI.submitNotes(claimId, notes)","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_737","timestamp":1745347382240,"code":"// 7. Explicit null check before accessing fileName\nval file: ClaimFile = ClaimFileService.getFile(fileId)\nif (file != null && file.fileName != null) println(file.fileName)","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_739","timestamp":1745347382241,"code":"// 8. Explicit null check for claimDate before using it\nval claimDate: java.util.Date = claim.getSubmissionDate()\nif (claimDate != null) {\n  println(claimDate.toString)\n}","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_741","timestamp":1745347382241,"code":"// 9. Returning null from function\n def findDocument(docId: String): Document = {\n   if (docId.isEmpty) null\n   else ClaimDocs.lookup(docId)\n }","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_743","timestamp":1745347382241,"code":"// 10. Assigning null to optional phone number\nvar phoneNumber: String = null\nif (userData.hasPhone) phoneNumber = userData.phone\n// use phoneNumber elsewhere","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_745","timestamp":1745347382241,"code":"// 11. Checking if claimAdjuster is null before contacting\ndef notifyAdjuster(adjuster: ClaimAdjuster) = {\n  if (adjuster != null) adjuster.sendNotification()\n}","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_747","timestamp":1745347382241,"code":"// 12. Null check for database result\nval claimResult = claimDB.lookup(claimId)\nif (claimResult == null) Console.err.println(\"Claim not found\")","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_749","timestamp":1745347382241,"code":"// 13. Returning null if no claim summary found\ndef claimSummary(claimId: String) = {\n  val summary = SummaryService.fetch(claimId)\n  if (summary == null) null\n  else summary\n}","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_751","timestamp":1745347382242,"code":"// 14. Null assignment for claim reference\nvar claimReference: String = null\nif (form.hasReference()) claimReference = form.reference()\nprintln(\"Reference: \" + claimReference)","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_753","timestamp":1745347382242,"code":"// 15. Using Java method that can return null\nval uploadedFile: java.io.File = JavaUploadService.getUploadedFile(fileId)\nif (uploadedFile != null) println(uploadedFile.getName())","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_755","timestamp":1745347382242,"code":"// 16. Null assignment for payout amount\nvar payout: java.math.BigDecimal = null\nif (claim.isProcessed) payout = claim.payoutAmount\n// use payout elsewhere","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_757","timestamp":1745347382242,"code":"// 17. Explicitly return null from search\ndef searchClaimNumber(query: String): String = {\n  val res = ClaimSearchService.findClaim(query)\n  if (res != null) res.claimNumber else null\n}","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_759","timestamp":1745347382242,"code":"// 18. Null check before rendering claim description\nval description: String = claim.getDescription()\nif (description != null) display(description)","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_761","timestamp":1745347382242,"code":"// 19. Explicit null check for beneficiary\ndef getBeneficiary(claimId: String): Beneficiary = {\n  val ben = BeneficiaryService.byClaim(claimId)\n  if (ben == null) null else ben\n}","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_763","timestamp":1745347382243,"code":"// 20. Assigning null on incomplete claim submission\nvar finalSubmission: ClaimSubmission = null\nif (SubmissionValidator.isComplete(form))\n  finalSubmission = ClaimSubmission(form)\n// later check finalSubmission for null","category":"uses_null_check","topicUsed":"Insurance claim submission portal"}
{"id":"uses_null_check_745","timestamp":1745347395326,"code":"var lastAccessedLesson: String = null // stores the last lesson accessed by a student\n// ...\nif (lastAccessedLesson == null) println(\"No lesson accessed yet.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_747","timestamp":1745347395326,"code":"class Student(val id: String, var progressReport: String)\nval stu = new Student(\"A123\", null)\nif (stu.progressReport == null) println(\"Progress report not available.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_749","timestamp":1745347395327,"code":"def fetchQuizScore(studentId: String): java.lang.Integer = {\n  // Simulating a missing score\n  null\n}\nval score = fetchQuizScore(\"stu45\")\nif (score == null) println(\"No quiz score recorded.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_751","timestamp":1745347395327,"code":"var learningObjective: String = null\n// Later in code\nif (learningObjective != null) println(learningObjective) else println(\"Objective missing\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_753","timestamp":1745347395327,"code":"val analyticsData: Array[String] = null\nif (analyticsData == null) println(\"Analytics data is not loaded.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_755","timestamp":1745347395327,"code":"def getInstructorFeedback(submissionId: Int): String = {\n  // No feedback yet\n  null\n}\nval feedback = getInstructorFeedback(101)\nif (feedback == null) println(\"Awaiting feedback...\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_757","timestamp":1745347395327,"code":"class Course(val name: String, var description: String)\nval course = new Course(\"Physics\", null)\nif (course.description == null) course.description = \"No description available.\"","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_759","timestamp":1745347395328,"code":"def getStudentGroup(learningEventId: Int): String = {\n  if (learningEventId < 0) null\n  else \"GroupA\"\n}\nval group = getStudentGroup(-1)\nif (group == null) println(\"Group not found.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_761","timestamp":1745347395328,"code":"// Data from legacy Java API\ndef fetchAttendanceRecord(studentId: String): java.util.Map[String, java.lang.Boolean] = null\nval attn = fetchAttendanceRecord(\"S01\")\nif (attn == null) println(\"Attendance data missing.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_763","timestamp":1745347395328,"code":"var recentActivity: String = null\n// Later updated after parsing logs\nrecentActivity = \"Viewed page 10\"\nif (recentActivity != null) println(s\"Recent activity: $recentActivity\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_765","timestamp":1745347395328,"code":"def getLastForumPost(userId: String): String = null\nval post = getLastForumPost(\"Bob12\")\nif (post == null) println(\"No posts found.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_767","timestamp":1745347395328,"code":"class Session(val sessionId: String, var duration: java.lang.Integer)\nval s = new Session(\"SESS88\", null)\n\nif (s.duration == null) println(\"No data on session duration.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_769","timestamp":1745347395328,"code":"def lookupGrade(studentId: String, courseId: String): java.lang.Double = {\n  // Grade not recorded\n  null\n}\nval grade = lookupGrade(\"S11\", \"C201\")\nif (grade == null) println(\"Grade missing.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_771","timestamp":1745347395329,"code":"var dashboardState: Map[String, String] = null\nif (dashboardState == null) {\n  dashboardState = Map(\"view\" -> \"default\")\n}","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_773","timestamp":1745347395329,"code":"def getEnrollmentStatus(studentId: String): String = {\n  // Simulate withdrawn\n  null\n}\nval status = getEnrollmentStatus(\"S211\")\nif (status == null) println(\"Enrollment status unknown.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_775","timestamp":1745347395329,"code":"class Feedback(val message: String)\ndef getLatestFeedback(teacherId: String): Feedback = null\nval fb = getLatestFeedback(\"T1\")\nif (fb == null) println(\"No latest feedback.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_777","timestamp":1745347395329,"code":"def recentQuizAttempt(studentId: String): java.time.LocalDateTime = null\nif (recentQuizAttempt(\"S321\") == null) println(\"No quiz attempt detected.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_779","timestamp":1745347395329,"code":"val submissionText: String = null\nif (submissionText == null) println(\"No submission detected.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_781","timestamp":1745347395329,"code":"var warningMessage: String = null\nif (warningMessage == null) warningMessage = \"Everything looks good!\"\nprintln(warningMessage)","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_783","timestamp":1745347395330,"code":"def getPeerReviewComment(reviewId: Int): String = null\nval comment = getPeerReviewComment(999)\nif (comment == null) println(\"No comment found for review.\")","category":"uses_null_check","topicUsed":"Education learning analytics"}
{"id":"uses_null_check_765","timestamp":1745347409712,"code":"class User(val name: String, var favoriteCuisine: String)\n\nval user = new User(\"Alice\", null)\nif (user.favoriteCuisine == null) {\n  println(\"No favorite cuisine set.\")\n}","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_767","timestamp":1745347409712,"code":"def getRecommendedRecipe(userId: String): String = {\n  null // No recommendations found\n}\n\nval recipe = getRecommendedRecipe(\"user1\")\nif (recipe == null) println(\"No recommendation available.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_769","timestamp":1745347409713,"code":"var lastViewedRecipe: String = null\nlastViewedRecipe = \"Vegan Burger\"\nif (lastViewedRecipe != null) println(lastViewedRecipe)","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_771","timestamp":1745347409713,"code":"def getAllergyInfo(userId: String): String = {\n  if (userId == \"admin\") null\n  else \"No allergies recorded\"\n}\nif (getAllergyInfo(\"admin\") == null) println(\"No allergy info.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_773","timestamp":1745347409713,"code":"var ingredientList: Array[String] = null\ningredientList = Array(\"tofu\", \"soy sauce\")\nif (ingredientList != null) println(ingredientList.mkString(\", \"))","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_775","timestamp":1745347409713,"code":"def preferredMealTime(user: String): String = {\n  // Simulating missing data\n  null\n}\nval mealTime = preferredMealTime(\"Eve\")\nif (mealTime == null) println(\"Preferred meal time not set.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_777","timestamp":1745347409713,"code":"class Recipe(val name: String)\n\nvar recommendedRecipe: Recipe = null\nif (recommendedRecipe == null) println(\"We need to generate a recommendation.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_779","timestamp":1745347409714,"code":"def fetchDietPlanFromJava(user: String): String = {\n  // Java API returns null if not found\n  null\n}\nval plan = fetchDietPlanFromJava(\"Bob\")\nif (plan == null) println(\"No diet plan found.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_781","timestamp":1745347409714,"code":"var userPreferences: Map[String, String] = null\nuserPreferences = Map(\"glutenFree\" -> \"yes\")\nif (userPreferences != null) println(userPreferences)","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_783","timestamp":1745347409714,"code":"def fetchLastRecipe(user: String): String = {\n  null\n}\nval last = fetchLastRecipe(\"Anna\")\nif (last == null) println(\"User has not viewed any recipes.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_785","timestamp":1745347409714,"code":"class Ingredient(val name: String, val substitute: String)\nval ingredient = new Ingredient(\"egg\", null)\nif (ingredient.substitute == null) println(\"No substitute available.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_787","timestamp":1745347409714,"code":"var chosenRecipe: String = null\nchosenRecipe = null\nif (chosenRecipe == null) println(\"Recipe not chosen yet.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_789","timestamp":1745347409714,"code":"def findRecipeByIngredients(ingredients: List[String]): String = {\n  if ingredients.contains(\"chocolate\") then null else \"Fruit Salad\"\n}\n\nval chocoRecipe = findRecipeByIngredients(List(\"chocolate\", \"butter\"))\nif (chocoRecipe == null) println(\"No recipe found containing chocolate.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_791","timestamp":1745347409715,"code":"def getProfilePicUrl(userId: String): String = {\n  null\n}\n\nval picUrl = getProfilePicUrl(\"michelle\")\nif (picUrl == null) println(\"User has no profile pic.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_793","timestamp":1745347409715,"code":"var recommendedPlan: String = null\nif (recommendedPlan == null) recommendedPlan = \"Standard Plan\"\nprintln(recommendedPlan)","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_795","timestamp":1745347409715,"code":"class Recommendation(val id: String, val score: Double)\nval bestRec: Recommendation = null\nif (bestRec == null) println(\"No recommendations yet.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_797","timestamp":1745347409715,"code":"def favoriteSpices(user: String): List[String] = {\n  null\n}\nval spices = favoriteSpices(\"Ben\")\nif (spices == null) println(\"No spice preferences found.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_799","timestamp":1745347409715,"code":"// Simulating integration with a java-based shopping cart API that returns null\nclass JavaShoppingCartAPI {\n  def getIngredientsList(userId: String): java.util.List[String] = null\n}\nval javaApi = new JavaShoppingCartAPI\nval ings = javaApi.getIngredientsList(\"user123\")\nif (ings == null) println(\"No ingredients in cart.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_801","timestamp":1745347409715,"code":"var calorieTarget: Integer = null\nif (calorieTarget == null) println(\"Calorie target not set.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_803","timestamp":1745347409716,"code":"def getCookingSkillLevel(user: String): String = {\n  \"Intermediate\"\n}\nval skill = if (\"Steve\" == \"Steve\") null else getCookingSkillLevel(\"Steve\")\nif (skill == null) println(\"No skill level set.\")","category":"uses_null_check","topicUsed":"Personalized recipe recommender"}
{"id":"uses_null_check_785","timestamp":1745347418210,"code":"var donorName: String = null // Donor's name might not be provided","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_787","timestamp":1745347418211,"code":"def findCharityById(id: String): Charity = {\n  if (id == \"123\") new Charity(\"123\", \"Food Relief\") else null\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_789","timestamp":1745347418211,"code":"def getLatestDonationAmount(userId: String): Double = {\n  // Simulate missing donation info\n  if (userId == \"abc\") 50.0 else null.asInstanceOf[Double]\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_791","timestamp":1745347418211,"code":"val campaignDescription: String = null // Campaign description not yet added","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_793","timestamp":1745347418211,"code":"def registerDonor(email: String): Donor = {\n  if (email.contains(\"@\")) new Donor(email) else null\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_795","timestamp":1745347418211,"code":"var donationReceipt: Receipt = null // No receipt until donation completes","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_797","timestamp":1745347418211,"code":"def getDonorEmailById(id: String): String = {\n  // Java API call might return null\n  val email = JavaCharityAPI.fetchEmail(id)\n  if (email != null) email else null\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_799","timestamp":1745347418212,"code":"def getCharityLogo(charity: Charity): Array[Byte] = {\n  if (charity.id == \"demo\") null else Array(1,2,3)\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_801","timestamp":1745347418212,"code":"var lastDonationTime: java.time.LocalDateTime = null","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_803","timestamp":1745347418212,"code":"def getPendingDonations(userId: String): List[Donation] = {\n  val result: List[Donation] = null // Fails to retrieve donations\n  result\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_805","timestamp":1745347418212,"code":"class Donation(var reference: String, var amount: Double)\nvar newDonation: Donation = null // Donation object is null before user submits","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_807","timestamp":1745347418212,"code":"def findMatchingCampaign(keyword: String): Campaign = {\n  if (keyword.isEmpty) null else new Campaign(\"Fight Hunger\")\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_809","timestamp":1745347418212,"code":"val preferredContactMethod: String = null","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_811","timestamp":1745347418213,"code":"def getMatchingDonor(donors: List[Donor], name: String): Donor = {\n  donors.find(_.name == name).orNull\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_813","timestamp":1745347418213,"code":"def charityMission(charity: Charity): String = {\n  if (charity == null) null else charity.mission\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_815","timestamp":1745347418213,"code":"var assignedVolunteer: Volunteer = null // No volunteer assigned yet","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_817","timestamp":1745347418213,"code":"def getTopDonorName(campaignId: String): String = {\n  // Hypothetical Java lib call\n  JavaCharityLib.topDonor(campaignId) // might return null\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_819","timestamp":1745347418213,"code":"def getCharityBankAccount(charityId: String): String = {\n  null // Not provided in system\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_821","timestamp":1745347418213,"code":"def fetchDonorPreferences(donor: Donor): Preferences = {\n  if (donor.name == \"test\") null else new Preferences()\n}","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_823","timestamp":1745347418213,"code":"var feedbackMessage: String = null // User hasn't submitted feedback","category":"uses_null_check","topicUsed":"Charity donation platform"}
{"id":"uses_null_check_805","timestamp":1745347441080,"code":"var liveScore: String = null\nif (liveScore == null) println(\"Live score is unavailable.\")\nliveScore = \"2 - 1\"\nprintln(s\"Updated Score: $liveScore\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_807","timestamp":1745347441081,"code":"def getLatestGoalScorer(matchId: Int): String = {\n  if (matchId <= 0) return null\n  // Simulating data retrieval\n  \"Messi\"\n}\nval scorer = getLatestGoalScorer(5)\nif (scorer != null) println(s\"Goal by $scorer!\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_809","timestamp":1745347441081,"code":"class SportsFeed {\n  var currentTime: String = null\n  def refreshTime(): Unit = {\n    // Imagine calling some API returning time\n    currentTime = \"75:34\"\n  }\n}\nval feed = new SportsFeed\nif (feed.currentTime == null) println(\"Waiting for time update...\")\nfeed.refreshTime()","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_811","timestamp":1745347441081,"code":"var homeScore: Integer = null\nif (homeScore == null) homeScore = Integer.valueOf(0)\nprintln(s\"Home Score: $homeScore\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_813","timestamp":1745347441081,"code":"def findPlayerStats(playerId: Int): String = {\n  // Simulated Java API that may return null\n  if (playerId == 7) null else s\"Player $playerId: 2 goals\"\n}\nval stats = findPlayerStats(7)\nif (stats == null) println(\"Player stats missing!\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_815","timestamp":1745347441081,"code":"var lastUpdate: java.time.Instant = null\nlastUpdate = java.time.Instant.now()\nprintf(\"Last update time: %s\\n\", lastUpdate)\nlastUpdate = null // Simulate feed disconnect","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_817","timestamp":1745347441082,"code":"val awayTeam: String = null\nif (awayTeam == null) println(\"No away team initialized.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_819","timestamp":1745347441082,"code":"def getMatchCommentary(minute: Int): String = {\n  if (minute < 0) return null\n  s\"Great chance at minute $minute!\"\n}\nval comment = getMatchCommentary(-1)\nif (comment == null) println(\"No commentary available.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_821","timestamp":1745347441082,"code":"class Scoreboard(var home: Int, var away: Int) {\n  var status: String = null\n}\nval board = new Scoreboard(1, 0)\nif (board.status == null) board.status = \"In Progress\"","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_823","timestamp":1745347441082,"code":"def retrieveMatchIdByName(name: String): java.lang.Long = {\n  if (name == \"\") return null\n  java.lang.Long.valueOf(1234)\n}\nval matchId = retrieveMatchIdByName(\"\")\nif (matchId == null) println(\"Match ID missing!\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_825","timestamp":1745347441082,"code":"var nextFixture: String = null\n// Simulating missing next fixture info\nif (nextFixture == null) println(\"Next fixture not set yet.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_827","timestamp":1745347441082,"code":"def getCurrentSetScore(playerName: String): String = {\n  if (playerName == null) return null\n  s\"$playerName: 4-3\"\n}\nval setScore = getCurrentSetScore(null)\nif (setScore == null) println(\"Current set score unavailable.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_829","timestamp":1745347441083,"code":"class LiveMatch {\n  var lastScorer: String = null\n  def updateScorer(name: String): Unit = {\n    lastScorer = name\n  }\n}\nval match1 = new LiveMatch\nif (match1.lastScorer == null) println(\"No goal yet.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_831","timestamp":1745347441083,"code":"var liveEvents: Array[String] = null\n// Simulate a Java method returning null\nif (liveEvents == null) println(\"No live events at this moment.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_833","timestamp":1745347441083,"code":"def fetchTeamLogo(teamId: Int): java.awt.Image = {\n  null // Placeholder for failed logo fetch\n}\nval logo = fetchTeamLogo(10)\nif (logo == null) println(\"Team logo unavailable.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_835","timestamp":1745347441083,"code":"var minuteOfLastGoal: Integer = null\nif (minuteOfLastGoal == null) println(\"No goals scored!\")\nminuteOfLastGoal = 57","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_837","timestamp":1745347441083,"code":"class UpdateFeed {\n  var lastMessage: String = null\n  def postMessage(msg: String): Unit = {\n    lastMessage = msg\n  }\n}\nval feed2 = new UpdateFeed\nfeed2.postMessage(\"Goal at 90+1 minute!\")\nif (feed2.lastMessage != null) println(feed2.lastMessage)","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_839","timestamp":1745347441083,"code":"val topScorer: String = null\nif (topScorer == null) println(\"Top scorer data pending update.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_841","timestamp":1745347441084,"code":"def getPenaltyStatus(matchId: Int): String = {\n  if (matchId == 0) null else \"Penalty awarded!\"\n}\nval penalty = getPenaltyStatus(0)\nif (penalty == null) println(\"No penalty in current match.\")","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_843","timestamp":1745347441084,"code":"var currentPossession: String = null\nif (currentPossession == null) println(\"Possession data not updated yet.\")\ncurrentPossession = \"Home Team\"","category":"uses_null_check","topicUsed":"Sports score live updating"}
{"id":"uses_null_check_825","timestamp":1745347456916,"code":"// 1. Assigning null to a newly added car variable\nvar newCar: Car = null\nif (addToFleet) {\n  newCar = new Car(\"Toyota\", \"Corolla\", 2023)\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_827","timestamp":1745347456917,"code":"// 2. Null check after Java library returns a customer\nval customer = JavaCustomerDB.findCustomerById(\"12345\")\nif (customer == null) println(\"Customer not found!\")","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_829","timestamp":1745347456917,"code":"// 3. Returning null from a car finder function\ndef findAvailableCar(model: String): Car = {\n  if (fleetIsEmpty) null else fleet.find(_.model == model).getOrElse(null)\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_831","timestamp":1745347456917,"code":"// 4. Null assignment to currentRental\nvar currentRental: Rental = null\nif (hasActiveRental) {\n  currentRental = getActiveRentalForCustomer(customerId)\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_833","timestamp":1745347456917,"code":"// 5. Null check on a pickup location\nif (booking.pickupLocation != null) {\n  println(\"Pickup location is specified.\")\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_835","timestamp":1745347456917,"code":"// 6. Null return for missing car in inventory\ndef getCarByPlate(plate: String): Car = {\n  carInventory.find(_.plate == plate).getOrElse(null)\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_837","timestamp":1745347456918,"code":"// 7. Null assignment after failed car allocation\nvar allocatedCar: Car = null\nallocatedCar = allocateCar(requestedType)\nif (allocatedCar == null) println(\"No car allocated.\")","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_839","timestamp":1745347456918,"code":"// 8. Conditional action based on null car assignment\nval car = fleet.getOrElse(plateNumber, null)\nif (car != null) licenseCheck(car)\n","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_841","timestamp":1745347456918,"code":"// 9. Returning null from a reservation search\ndef findReservation(customerId: String): Reservation = {\n  reservationList.find(_.customerId == customerId).getOrElse(null)\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_843","timestamp":1745347456918,"code":"// 10. Assign null if branch not found\nval branch = branches.find(_.city == cityName).getOrElse(null)\nif (branch == null) println(\"Branch not found!\")","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_845","timestamp":1745347456918,"code":"// 11. Setting lastServiceDate to null initially\nvar lastServiceDate: java.time.LocalDate = null\nif (carNeedsService) lastServiceDate = java.time.LocalDate.now()","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_847","timestamp":1745347456918,"code":"// 12. Null check for car insurance information\nif (car.insuranceDetails == null) println(\"Insurance not set for this car.\")","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_849","timestamp":1745347456918,"code":"// 13. Assign null to return location when booking not yet complete\nvar returnLocation: Location = null\nif (bookingFinalized) returnLocation = getReturnLocation(bookingId)","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_851","timestamp":1745347456919,"code":"// 14. Null check for optional driver info\nif (booking.additionalDriver != null) {\n  println(\"Additional driver on this booking.\")\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_853","timestamp":1745347456919,"code":"// 15. Null return for missing car document\ndef getCarInsuranceDoc(carId: String): Document = {\n  documents.find(_.carId == carId).find(_.docType == \"INSURANCE\").getOrElse(null)\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_855","timestamp":1745347456919,"code":"// 16. Assigning null after removing a car from the active rentals map\nvar activeCar: Car = getActiveRentals.get(rentalId).orNull\nif (removedRental) activeCar = null","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_857","timestamp":1745347456919,"code":"// 17. Checking if damage report is attached\nif (car.damageReport != null) println(\"Damage report available.\")","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_859","timestamp":1745347456920,"code":"// 18. Null setter for customer email when updating profile\ncustomer.email = null","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_861","timestamp":1745347456920,"code":"// 19. Returning null when no available agent for shift\ndef getFreeAgent(): Agent = {\n  agentList.find(_.onDuty).getOrElse(null)\n}","category":"uses_null_check","topicUsed":"Car rental fleet management"}
{"id":"uses_null_check_863","timestamp":1745347456920,"code":"// 20. Null assignment to holding lot if car not yet parked\nvar holdingLot: Lot = null\nif (carArrived) holdingLot = assignHoldingLot(car)","category":"uses_null_check","topicUsed":"Car rental fleet management"}
